<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IoT Edge デバイスを X.509 証明書を使って IoT Hub に接続する方法について</title>
      <link href="/blog/2021/05/06/IoTEdge-X509-Connect-IoTHub/"/>
      <url>/blog/2021/05/06/IoTEdge-X509-Connect-IoTHub/</url>
      
        <content type="html"><![CDATA[<p>IoT Edge デバイスを IoT Hub に接続する方法について、X.509 証明書を使用する場合の具体的な手順例をご紹介します。</p><a id="more"></a><br><hr><h1 id="IoT-Edge-デバイスを-IoT-Hub-に接続する方法-X-509-証明書"><a href="#IoT-Edge-デバイスを-IoT-Hub-に接続する方法-X-509-証明書" class="headerlink" title="IoT Edge デバイスを IoT Hub に接続する方法 (X.509 証明書)"></a>IoT Edge デバイスを IoT Hub に接続する方法 (X.509 証明書)</h1><p>IoT Hub に IoT Edge デバイスを接続する際の認証情報としては対称キー (SAS トークン) の他に X.509 証明書がサポートされています。以下は X.509 証明書の拇印を利用して IoT Edge デバイスを IoT Hub に接続するための具体的な手順となります。</p><h2 id="検証環境"><a href="#検証環境" class="headerlink" title="検証環境"></a>検証環境</h2><ul><li>ホスト OS: Ubuntu 18.04 LTS</li><li>IoT Edge バージョン: 1.0.10.4</li></ul><h2 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h2><h3 id="1-IoT-Edge-をインストールする"><a href="#1-IoT-Edge-をインストールする" class="headerlink" title="(1) IoT Edge をインストールする"></a>(1) IoT Edge をインストールする</h3><p>下記の手順に従って「IoT Edge をインストールする」の項目まで作業を進めます。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/iot-edge/how-to-install-iot-edge?view=iotedge-2018-06" target="_blank" rel="noopener">Azure IoT Edge for Linux をインストールまたはアンインストールする</a></li></ul><h3 id="2-テスト用の証明書を生成する"><a href="#2-テスト用の証明書を生成する" class="headerlink" title="(2) テスト用の証明書を生成する"></a>(2) テスト用の証明書を生成する</h3><p>下記ドキュメントの Bash 向けの手順でテスト用の証明書を生成します。これは IoT Edge をインストールした Ubuntu 上で実行しても問題ありません。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/iot-edge/how-to-create-test-certificates?view=iotedge-2018-06" target="_blank" rel="noopener">IoT Edge デバイスの機能をテストするためのデモ用の証明書を作成する</a></li></ul><p>ここでは IoT Edge デバイスのデバイス ID を “u1804serveredge01” とします。</p><p>コマンド例:</p><hr><pre><code>git clone https://github.com/Azure/iotedge.git  mkdir certgen  cp iotedge/tools/CACertificates/*.cnf certgen/  cp iotedge/tools/CACertificates/certGen.sh certgen/  cd certgen  ./certGen.sh create_root_and_intermediate  ./certGen.sh create_edge_device_identity_certificate &quot;u1804serveredge01&quot;  </code></pre><hr><h3 id="3-デバイス証明書の拇印を確認する"><a href="#3-デバイス証明書の拇印を確認する" class="headerlink" title="(3) デバイス証明書の拇印を確認する"></a>(3) デバイス証明書の拇印を確認する</h3><p>コマンド例:</p><hr><pre><code>openssl x509 -in certs/iot-edge-device-identity-u1804serveredge01.cert.pem -fingerprint -noout</code></pre><hr><p>出力例:</p><hr><pre><code>SHA1 Fingerprint=07:49:D2:99:AD:39:88:AD:1E:CA:36:BD:5B:33:B1:55:48:CA:CE:82</code></pre><hr><h3 id="4-IoT-Hub-に-IoT-Edge-デバイスを登録する"><a href="#4-IoT-Hub-に-IoT-Edge-デバイスを登録する" class="headerlink" title="(4) IoT Hub に IoT Edge デバイスを登録する"></a>(4) IoT Hub に IoT Edge デバイスを登録する</h3><p>Azure ポータルから IoT Edge デバイスを追加します。</p><p><img src="https://jpiotblog.github.io/images/IoTEdge-X509-Connect-IoTHub/Register-IoTEdge-Device.png" alt="Register-IoTEdge-Device.png"></p><p>手順 (2) で指定したデバイス ID (この例では “u1804serveredge01”) および手順 (3) で確認した拇印を入力します。</p><p>入力例:</p><p><img src="https://jpiotblog.github.io/images/IoTEdge-X509-Connect-IoTHub/Register-IoTEdge-Device-2.png" alt="Register-IoTEdge-Device-2.png"></p><h3 id="5-IoT-Edge-の-config-yaml-を編集してデーモンを再起動する"><a href="#5-IoT-Edge-の-config-yaml-を編集してデーモンを再起動する" class="headerlink" title="(5) IoT Edge の config.yaml を編集してデーモンを再起動する"></a>(5) IoT Edge の config.yaml を編集してデーモンを再起動する</h3><p>上記 “Azure IoT Edge for Linux をインストールまたはアンインストールする” の「オプション 2:X.509 証明書を使用した認証」に従って設定を行います。</p><p>config.yaml の設定例:</p><hr><pre><code>provisioning:    source: &quot;manual&quot;    authentication:        method: &quot;x509&quot;        iothub_hostname: &quot;&lt;YOUR IOT HUB NAME&gt;.azure-devices.net&quot;        device_id: &quot;u1804serveredge01&quot;        identity_cert: &quot;file:///home/user/certgen/certs/iot-edge-device-identity-u1804serveredge01.cert.pem&quot;        identity_pk: &quot;file:///home/user/certgen/private/iot-edge-device-identity-u1804serveredge01.key.pem&quot;    dynamic_reprovisioning: false</code></pre><hr><ul><li>iothub_hostname: IoT Hub のホスト名</li><li>device_id: デバイス ID, この例では “u1804serveredge01”</li><li>identity_cert: デバイス証明書のパス (フルパスの前に “file://“ が必要)</li><li>identity_pk: デバイス証明書の秘密鍵のパス (フルパスの前に “file://“ が必要)</li></ul><p>config.yaml の変更内容を保存したら IoT Edge デーモンを再起動します。</p><hr><pre><code>sudo systemctl restart iotedge</code></pre><hr><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><p>IoT Edge デバイスは CA 証明書による複数デバイスの包括的な認証には対応していないため、自己署名証明書ではなく他の CA によって署名された証明書を使用する場合であっても、手順 (4) では「X.509 自己署名済み」を選択して証明書の拇印を個別で登録する必要があります。また、Device Provisioning Service (DPS) で IoT Edge デバイスをグループ登録することは可能ですが、この場合も IoT Hub には証明書の拇印が登録されます。</p><ul><li><a href="https://docs.microsoft.com/ja-jp/azure/iot-hub/iot-hub-x509ca-overview" target="_blank" rel="noopener">X.509 CA 証明書を使用したデバイス認証</a></li><li><a href="https://docs.microsoft.com/ja-jp/azure/iot-edge/how-to-auto-provision-x509-certs?view=iotedge-2020-11" target="_blank" rel="noopener">X.509 証明書を使用して IoT Edge デバイスを作成およびプロビジョニングする</a></li></ul><p><code>変更履歴</code><br><code>2021/05/06 created by Nakagami</code>  </p><p>※ 本記事は 「<a href="https://jpiotblog.github.io/blog/2020/01/01/about-jpiotblog/">jpiotblog について</a>」 の留意事項に準じます。<br>※ 併せて 「<a href="https://jpiotblog.github.io/blog/">ホームページ</a>」 および 「<a href="https://jpiotblog.github.io/blog/archives/">記事一覧</a>」 もご参照いただければ幸いです。  </p>]]></content>
      
      
      <categories>
          
          <category> IoT Hub </category>
          
          <category> IoT Edge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IoT Hub </tag>
            
            <tag> IoT Edge </tag>
            
            <tag> X.509 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IoT Hub に MQTT でメッセージを Publish する際のトピック名について</title>
      <link href="/blog/2021/04/28/IoTHub-mqtt-publish-topic-name/"/>
      <url>/blog/2021/04/28/IoTHub-mqtt-publish-topic-name/</url>
      
        <content type="html"><![CDATA[<p>IoT Hub に MQTT でメッセージを Publish する際のトピック名に関する注意点をご案内します。</p><a id="more"></a><br><hr><h2 id="本記事の背景"><a href="#本記事の背景" class="headerlink" title="本記事の背景"></a>本記事の背景</h2><p>IoT Hub は <a href="https://docs.microsoft.com/ja-jp/azure/iot-hub/iot-hub-mqtt-support" target="_blank" rel="noopener">MQTT での接続をサポート</a>しており、デバイスは Azure IoT device SDK の代わりに汎用的な MQTT ライブラリを利用して通信することが可能です。</p><p>ここで、デバイス ID が Device01 の場合に、IoT Hub に MQTT で接続して D2C (テレメトリ) メッセージを送信するまでの一般的な流れは以下の通りです。</p><p>(1) デバイス ID (Device01) と IoT Hub のホスト名、対称キーの情報を元に SAS トークンを生成します。</p><ul><li>SAS トークンの例: SharedAccessSignature sr={your hub name}.azure-devices.net%2Fdevices%2F<strong>Device01</strong>%2Fapi-version%3D2016-11-14&amp;sig=vSgHBMUG…..Ntg%3d&amp;se=1456481802</li></ul><p>(2) MQTT で接続 (CONNECT パケットの送信) を行います。</p><ul><li>Usename: {your hub name}.azure-devices.net/<strong>Device01</strong>/?api-version=2018-06-30</li><li>Password: ステップ 1 で生成した SAS トークン</li></ul><p>(3) D2C メッセージを送信するため Publish を行います。</p><ul><li>Publish 先のトピック名: devices/<strong>Device01</strong>/messages/events/</li></ul><h2 id="MQTT-を直接利用する場合に発生する現象"><a href="#MQTT-を直接利用する場合に発生する現象" class="headerlink" title="MQTT を直接利用する場合に発生する現象"></a>MQTT を直接利用する場合に発生する現象</h2><p>通常は上記のようにステップ 1 - 3 で使用されるデバイス ID は全て同じ (Device01) となります。Azure IoT device SDK を利用している場合は MQTT レベルの操作を意識する必要がなく、トピック名などのパラメーターは適切に設定されます。</p><p>一方で、MQTT を直接使用している場合、ステップ 3 で ステップ 1, 2 とは異なるデバイス ID (例. Device02) をクライアント側で指定することが技術的には可能です。</p><ul><li>Publish 先のトピック名: devices/<strong>Device02</strong>/messages/events/</li></ul><p>現在の IoT Hub はこのようなケースについて、公開ドキュメントの仕様では明記されていませんが、実際の動作としては、デバイス ID の文字列によってエラーになるパターンと、エラーとならずに Publish に成功するパターンが存在しています。</p><h2 id="今後の対応予定"><a href="#今後の対応予定" class="headerlink" title="今後の対応予定"></a>今後の対応予定</h2><p>ステップ 3 で Publish する際のトピック名に含まれるデバイス ID を、ステップ 1, 2 と異なるものにする必要は通常無いと考えられるため、今後はトピック名を厳密にチェックして、接続時と異なるデバイス ID を宛先とした Publish は全てエラーとして扱われる予定です。併せて、既に本動作を前提として運用しているユーザーに対する周知や、仕様として公開ドキュメントに記載する準備も進めています。</p><hr><p><code>変更履歴</code><br><code>2021/04/28 created by Nakagami</code>  </p><p>※ 本記事は 「<a href="https://jpiotblog.github.io/blog/2020/01/01/about-jpiotblog/">jpiotblog について</a>」 の留意事項に準じます。<br>※ 併せて 「<a href="https://jpiotblog.github.io/blog/">ホームページ</a>」 および 「<a href="https://jpiotblog.github.io/blog/archives/">記事一覧</a>」 もご参照いただければ幸いです。  </p>]]></content>
      
      
      <categories>
          
          <category> IoT Hub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IoT Hub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keyboard Filter で [Windows キー + PrintScrn キー] 及び [Shift キー + PrintScrn キー] をフィルタする方法</title>
      <link href="/blog/2021/04/19/KF-block-printscrn-combination/"/>
      <url>/blog/2021/04/19/KF-block-printscrn-combination/</url>
      
        <content type="html"><![CDATA[<p>Windows 10 IoT Enterprise (Enterprise もバイナリとして同じ) の Device Lockdown 機能の Keyboard Filter で [Windows キー + PrintScrn キー] 及び [Shift キー + PrintScrn キー] をフィルタする方法をご紹介します。  </p><a id="more"></a><br><hr><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><p>以下のドキュメントの Enable-rules.ps1 の Enable-Scancode を使います。  </p><ul><li><a href="https://docs.microsoft.com/en-us/windows-hardware/customize/enterprise/keyboardfilter-add-blocked-key-combinations" target="_blank" rel="noopener">Add blocked key combinations</a></li></ul><p>Enable-rules.ps1 の 「# Some example uses of the functions defined above.」以降を、以下の様に置き換えます。<br>以下の変更を加えた状態で、Enable-rules.ps1 を実行した場合は、[Windows キー + PrintScrn キー] 及び [Shift キー + PrintScrn キー] のフィルターが有効化されます。</p><h3 id="Windows-PrintScrn"><a href="#Windows-PrintScrn" class="headerlink" title="Windows + PrintScrn"></a>Windows + PrintScrn</h3><blockquote><p>Enable-Scancode -Modifiers “Win” -Code 0xE037 </p></blockquote><h3 id="Shift-PrintScrn"><a href="#Shift-PrintScrn" class="headerlink" title="Shift + PrintScrn"></a>Shift + PrintScrn</h3><blockquote><p>Enable-Scancode -Modifiers “Shift” -Code 0xE037 </p></blockquote><hr><h2 id="補足"><a href="#補足" class="headerlink" title="補足"></a>補足</h2><p>上記ドキュメントの Enable-Custom-Key で、以下の様な組み合わせを試した場合、PrintScrn キー単体と、[Alt キー+ PrintScrn キー] は問題なくフィルターできますが、[Windows キー + PrintScrn キー] 及び [Shift キー + PrintScrn キー] をフィルタすることはできません。  </p><h3 id="PrintScrn"><a href="#PrintScrn" class="headerlink" title="PrintScrn"></a>PrintScrn</h3><blockquote><p>Enable-Custom-Key “PrintScrn”</p></blockquote><h3 id="Alt-PrintScrn"><a href="#Alt-PrintScrn" class="headerlink" title="Alt + PrintScrn"></a>Alt + PrintScrn</h3><blockquote><p>Enable-Custom-Key “Alt+PrintScrn”</p></blockquote><h3 id="Windows-PrintScrn-1"><a href="#Windows-PrintScrn-1" class="headerlink" title="Windows + PrintScrn"></a>Windows + PrintScrn</h3><blockquote><p>Enable-Custom-Key “Win+PrintScrn” </p></blockquote><h3 id="Shift-PrintScrn-1"><a href="#Shift-PrintScrn-1" class="headerlink" title="Shift + PrintScrn"></a>Shift + PrintScrn</h3><blockquote><p>Enable-Custom-Key “Shift+PrintScrn”</p></blockquote><p>これは不具合ではなく、想定された動作として取り扱われています。[Windows キー + PrintScrn キー] 及び [Shift キー + PrintScrn キー] のフィルタリングは、冒頭で紹介しました方法をご利用ください。</p><p>以上の内容がお役に立てば幸いです。</p><hr><p><code>変更履歴</code><br><code>2021/04/19 created by Tsuda</code>  </p><p>※ 本記事は 「<a href="https://jpiotblog.github.io/blog/2020/01/01/about-jpiotblog/">jpiotblog について</a>」 の留意事項に準じます。<br>※ 併せて 「<a href="https://jpiotblog.github.io/blog/">ホームページ</a>」 および 「<a href="https://jpiotblog.github.io/blog/archives/">記事一覧</a>」 もご参照いただければ幸いです。  </p>]]></content>
      
      
      <categories>
          
          <category> Keyboard Filter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Keyboard Filter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UWF 有効化環境で HORM を使用する際の留意点について</title>
      <link href="/blog/2020/11/10/UWF-HORM/"/>
      <url>/blog/2020/11/10/UWF-HORM/</url>
      
        <content type="html"><![CDATA[<p>Unified Write Filter (UWF) と共に Hibernate Once/Resume Many (HORM) 機能を使用する際の留意点を紹介いたします。  </p><a id="more"></a><br>統合書き込みフィルター (UWF) と共に Hibernate Once/Resume Many (HORM) 機能を使用することで、事前に構成された状態でデバイスを起動することが可能になります。HORM が有効になると、システムは常に最後に保存された休止状態ファイル (hiberfil.sys) から再開および再起動されます。機能の有効化など具体的な手順は、下記サイトを参照ください。  <ul><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/hibernate-once-resume-many-horm-" target="_blank" rel="noopener">Hibernate Once/Resume Many (HORM)</a></li></ul><p>本記事では、HORM を有効化する際の留意点をお纏めいたします。  </p><hr><h2 id="要件等"><a href="#要件等" class="headerlink" title="要件等"></a>要件等</h2><p>具体的な要件は以下サイトに纏めておりますので、ご参照ください。  </p><ul><li><p><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/hibernate-once-resume-many-horm-#requirements" target="_blank" rel="noopener">要件</a></p><blockquote><p>Windows 10 Enterprise、Windows 10 の教育、または Windows IoT Core (IoT Core)。 X86 ベースおよび x64 ベースのデバイスでサポートされています。  </p></blockquote></li><li><p><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/hibernate-once-resume-many-horm-#uwf-configuration" target="_blank" rel="noopener">UWF 構成</a></p><blockquote><p>HORM を有効または無効にするには、その前に UWF を有効にする必要があります。 UWF は、休止ファイルが無効にならないように保護するために、次の方法で構成する必要があります。  </p><ul><li>システムにマウントされているすべての固定ボリュームは、UWF によって保護されている必要があります。  </li><li>システムで、UWF 用に構成されたファイル、フォルダー、またはレジストリの除外を使用することはできません。  </li><li>UWF オーバーレイは RAM モードを使用するように構成されている必要があります。 HORM では、ディスクを利用するオーバーレイはサポートされていません。</li></ul></blockquote></li></ul><hr><h2 id="状態確認方法"><a href="#状態確認方法" class="headerlink" title="状態確認方法"></a>状態確認方法</h2><p>HORM の有効/無効状態は uwfmgr.exe get-config コマンドの結果から確認することが出来ません。そのため、下記レジストリ値などから確認を行うことをお勧めしております。  </p><p><code>キー: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\uwfvol\Parameters\Dynamic</code><br><code>名前: HormEnabled</code><br><code>種類: DWORD</code><br><code>値: (0: 無効 / 1 有効)</code>  </p><p>コマンドで確認する場合は、以下の通り実行ください。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\uwfvol\Parameters\Dynamic&quot; &#x2F;v &quot;HormEnabled&quot;</span><br></pre></td></tr></table></figure><p>WMI を使って確認することも可能です (参考: <a href="https://docs.microsoft.com/en-us/windows-hardware/customize/enterprise/uwf-filter" target="_blank" rel="noopener">Unified Write Filter WMI provider reference</a>)。  </p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\system32&gt; <span class="built_in">Get-WMIObject</span> <span class="literal">-class</span> UWF_Filter <span class="literal">-namespace</span> <span class="string">"root\standardcimv2\embedded"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">__GENUS          : <span class="number">2</span></span><br><span class="line">__CLASS          : UWF_Filter</span><br><span class="line">__SUPERCLASS     :</span><br><span class="line">__DYNASTY        : UWF_Filter</span><br><span class="line">__RELPATH        : UWF_Filter.Id=<span class="string">"UWF_Filter"</span></span><br><span class="line">__PROPERTY_COUNT : <span class="number">5</span></span><br><span class="line">__DERIVATION     : &#123;&#125;</span><br><span class="line">__SERVER         : DESKTOP<span class="literal">-H44UL9P</span></span><br><span class="line">__NAMESPACE      : root\standardcimv2\embedded</span><br><span class="line">__PATH           : \\DESKTOP<span class="literal">-H44UL9P</span>\root\standardcimv2\embedded:UWF_Filter.Id=<span class="string">"UWF_Filter"</span></span><br><span class="line">CurrentEnabled   : True</span><br><span class="line">HORMEnabled      : False</span><br><span class="line">Id               : UWF_Filter</span><br><span class="line">NextEnabled      : True</span><br><span class="line">ShutdownPending  : False</span><br><span class="line">PSComputerName   : DESKTOP<span class="literal">-H44UL9P</span></span><br></pre></td></tr></table></figure><p>なお、uwfmgr ツールで HORM 有効/無効化する際のエラーメッセージからも状態を確認することが可能です。例えば、uwfmgr.exe filter enable-horm コマンドを実行時に、既に有効になっている場合以下の通りメッセージが出力します。  </p><blockquote><p>Unified Write Filter already enabled - no action taken.  </p></blockquote><p>uwfmgr.exe filter disable-horm コマンドを実行時に、既に無効になっている場合以下の通りメッセージが出力します。  </p><blockquote><p>Unified Write Filter already disabled - no action taken.  </p></blockquote><hr><h2 id="特定のドライブを保護せずに-HORM-を有効化する方法"><a href="#特定のドライブを保護せずに-HORM-を有効化する方法" class="headerlink" title="特定のドライブを保護せずに HORM を有効化する方法"></a>特定のドライブを保護せずに HORM を有効化する方法</h2><p>HORM 機能を有効化する際、全てのボリュームを保護しておくことが前提となりますが、一部のボリュームを保護せずに使用したい場合がありす。UWF の前身である EWF では、HORM を有効化する際に保護対象外のボリュームを dismount することで対応可能といった記事がございますが、UWF でも同様の方法が利用いただけます。  </p><ul><li><a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ff794826(v=winembedded.60)" target="_blank" rel="noopener">Use an Unprotected Volume in a Hibernate Once/Resume Many Environment (Standard 7 SP1)</a>  </li></ul><p>具体的には、uwfmgr volume protect コマンドで特定のボリュームを保護した後、保護対象としていないボリュームのディスクを diskpart コマンドなどでオフラインにしておくことで実現可能です。以下は、ディスク 1 が D ドライブである場合の実行例です。<br>※ diskpart コマンドのリファレンスは <a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/diskpart" target="_blank" rel="noopener">こちら</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt;diskpart</span><br><span class="line"> </span><br><span class="line">Microsoft DiskPart バージョン 10.0.17763.1</span><br><span class="line"> </span><br><span class="line">Copyright (C) Microsoft Corporation.</span><br><span class="line">コンピューター: DESKTOP-UQTBV36</span><br><span class="line"> </span><br><span class="line">DISKPART&gt; list disk</span><br><span class="line"> </span><br><span class="line">  ディスク      状態           サイズ   空き   ダイナ GPT</span><br><span class="line">  ###                                          ミック</span><br><span class="line">  ------------  -------------  -------  -------  ---  ---</span><br><span class="line">  ディスク 0    オンライン           127 GB      0 B        *</span><br><span class="line">  ディスク 1    オンライン            10 GB  1024 KB        *</span><br><span class="line"> </span><br><span class="line">DISKPART&gt; select disk 1</span><br><span class="line"> </span><br><span class="line">ディスク 1 が選択されました。</span><br><span class="line"> </span><br><span class="line">DISKPART&gt; offline disk</span><br><span class="line"> </span><br><span class="line">DiskPart は選択されたディスクをオフラインにしました。</span><br><span class="line"> </span><br><span class="line">DISKPART&gt; list disk</span><br><span class="line"> </span><br><span class="line">  ディスク      状態           サイズ   空き   ダイナ GPT</span><br><span class="line">  ###                                          ミック</span><br><span class="line">  ------------  -------------  -------  -------  ---  ---</span><br><span class="line">  ディスク 0    オンライン           127 GB      0 B        *</span><br><span class="line">* ディスク 1    オフライン            10 GB  1024 KB        *</span><br><span class="line"> </span><br><span class="line">DISKPART&gt; exit</span><br><span class="line"> </span><br><span class="line">DiskPart を終了しています...</span><br></pre></td></tr></table></figure><p>COMPMGMT.MSC または DISKMGMT.MSC コマンドで “ディスクの管理” コンソールを起動し、UI 上でオフラインにしても問題ありません。  </p><p><img src="https://jpiotblog.github.io/images/UWF-HORM/UWF-disk-management-offline.png" align="left" border="1"><br clear="left">  </p><hr><p><code>変更履歴</code><br><code>2020/11/10 modified by Mochizuki</code><br><code>2020/12/01 modified by Iwaida</code>  </p><p>※ 本記事は 「<a href="https://jpiotblog.github.io/blog/2020/01/01/about-jpiotblog/">jpiotblog について</a>」 の留意事項に準じます。<br>※ 併せて 「<a href="https://jpiotblog.github.io/blog/">ホームページ</a>」 および 「<a href="https://jpiotblog.github.io/blog/archives/">記事一覧</a>」 もご参照いただければ幸いです。  </p>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uwfmgr.exe </tag>
            
            <tag> HORM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UWF 有効化環境で Windows Update 実行時に Out Of Memory が発生する</title>
      <link href="/blog/2020/08/21/UWF-out-of-memory/"/>
      <url>/blog/2020/08/21/UWF-out-of-memory/</url>
      
        <content type="html"><![CDATA[<p>UWF 有効化環境で LCU (累積更新プログラム) の適用時に Out Of Memory が発生する事象について紹介します。</p><a id="more"></a><br><hr><h3 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h3><p>事象が発生することが確認出来ている環境の条件は、以下全てを満たす場合です。  </p><ul><li>Windows 10 Enterprise 2016 LTSB または Windows 10 IoT Enterprise 2016 LTSB</li><li>物理メモリ (RAM) が 4 GB 以下</li><li>UWF でシステム使用領域 (通常は C ドライブ) を保護している</li></ul><hr><h3 id="事象"><a href="#事象" class="headerlink" title="事象"></a>事象</h3><p>UWF を有効化している環境で Windows Update を適用する方法は、主に以下 2 通りになります。</p><ul><li>uwfmgr.exe filter disable を実行して OS 再起動し、手動で Windows Update を実行する。  </li><li>uwfmgr.exe servicing enable を実行して<a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/service-uwf-protected-devices" target="_blank" rel="noopener">UWF サービスモード</a>を有効化する。  </li></ul><p>この時、上述の環境条件を全て満たすマシンでは Out Of Memory が発生し、更新が失敗する事象が確認されています。 </p><hr><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Windows 10 Enterprise 2016 LTSB および Windows 10 IoT Enterprise 2016 LTSB は、リリースから長期間が経過していることから、LCU (累積更新プログラム) が持つメタ データのサイズが非常に大きくなっており、処理の過程でメモリ不足 (Out Of Memory) が発生することが知られております。<br>このような問題の一般的な対処策として、ページング ファイルを有効化する方法があります。しかし、UWF を有効化したタイミングでページング ファイルは無効化されるため、UWF の利用開始がこの問題を発生させるトリガーとなる場合がございます。  </p><hr><h3 id="対処方法"><a href="#対処方法" class="headerlink" title="対処方法"></a>対処方法</h3><p>以下いずれかの方法を実施することで、事象を回避できる可能性があります。  </p><ul><li>RAM を増設する</li><li>ドライブを追加しページング ファイルの出力先に設定する</li><li>UWF フィルターの無効化後、ページング ファイルを設定してから Windows Update を実行する</li></ul><p>3 点目の運用回避方法につきまして、以下に具体的な手順を紹介させていただきます。  </p></br><b><u>運用手順</u></b><p>(1) 以下のコマンドを実行して、UWF フィルターを無効化します (※ コマンド実行後、OS が再起動します)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe filter disable</span><br><span class="line">shutdown &#x2F;r &#x2F;t 0</span><br></pre></td></tr></table></figure><p>(2) 以下のコマンドを実行して、ページング ファイルを設定します (コマンド実行後、OS が再起動します)。<br>※ GUI で実行する場合は <a href="https://jpiotblog.github.io/blog/2020/08/21/UWF-out-of-memory/#2-%E3%81%AE%E6%89%8B%E9%A0%86%E3%82%92-GUI-%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95">こちら</a> を参照ください。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Memory Management&quot; &#x2F;v PagingFiles &#x2F;t REG_MULTI_SZ &#x2F;d &quot;c:\pagefile.sys 4396 4396&quot; &#x2F;f</span><br><span class="line">shutdown &#x2F;r &#x2F;t 0</span><br></pre></td></tr></table></figure><p>(3) 手動での Windows Update を実行します。</p><p>(4) 以下のコマンドを実行して、ページング ファイルの設定を削除します (コマンド実行後、OS が再起動します)。<br>※ GUI で実行する場合は <a href="https://jpiotblog.github.io/blog/2020/08/21/UWF-out-of-memory/#4-%E3%81%AE%E6%89%8B%E9%A0%86%E3%82%92-GUI-%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95">こちら</a> を参照ください。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Memory Management&quot; &#x2F;v PagingFiles &#x2F;t REG_MULTI_SZ &#x2F;d &quot;&quot; &#x2F;f</span><br><span class="line">shutdown &#x2F;r &#x2F;t 0</span><br></pre></td></tr></table></figure><p>(5) 以下のコマンドを実行して、UWF フィルターを有効化します (コマンド実行後、OS が再起動します)。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe filter enable</span><br><span class="line">shutdown &#x2F;r &#x2F;t 0</span><br></pre></td></tr></table></figure><hr><h3 id="補足情報"><a href="#補足情報" class="headerlink" title="補足情報"></a>補足情報</h3><p>上述の手順 (2) および (4) は GUI からも実行頂けます。レジストリを直接操作することに制限がございます場合、以下の手順を参考に実施ください。  </p><h4 id="2-の手順を-GUI-で実行する方法"><a href="#2-の手順を-GUI-で実行する方法" class="headerlink" title="(2) の手順を GUI で実行する方法"></a>(2) の手順を GUI で実行する方法</h4><p>(2-1) Ctrl + R キーを押下し、[名前] 欄に sysdm.cpl と入力して [OK] ボタンをクリックします。<br>(2-2) [システムのプロパティ] ダイアログの [詳細設定] タブ - [設定] ボタンをクリックします。<br>(2-3) [パフォーマンス オプション] ダイアログの [詳細設定] タブ - [変更] ボタンをクリックします。<br>(2-4) [仮想メモリ] ダイアログの [すべてのドライブのページング ファイルのサイズを自動的に管理する] のチェックを外し、[カスタム サイズ] にチェックを入れ、初期サイズと最大サイズに 4396 を入力、[設定] ボタンをクリックし、[OK] ボタンをクリックします。</p><img src="https://jpiotblog.github.io/images/UWF-out-of-memory/Virtual-memory-2-4.png" width=300px>  <p>(2-5) OS の再起動を促すダイアログがポップアップした場合、指示に従い再起動します。表示されなかった場合には、手動で OS を再起動します。  </p><h4 id="4-の手順を-GUI-で実行する方法"><a href="#4-の手順を-GUI-で実行する方法" class="headerlink" title="(4) の手順を GUI で実行する方法"></a>(4) の手順を GUI で実行する方法</h4><p>(4-1) Ctrl + R キーを押下し、[名前] 欄に sysdm.cpl と入力して [OK] ボタンをクリックします。<br>(4-2) [システムのプロパティ] ダイアログの [詳細設定] タブ - [設定] ボタンをクリックします。<br>(4-3) [パフォーマンス オプション] ダイアログの [詳細設定] タブ - [変更] ボタンをクリックします。<br>(4-4) [仮想メモリ] ダイアログの [ページング ファイルなし] にチェックを入れ、[設定] ボタンをクリックし、[OK] ボタンをクリックします。</p><img src="https://jpiotblog.github.io/images/UWF-out-of-memory/Virtual-memory-4-4.png" width=300px>  <p>(4-5) 続行するか確認のダイアログがポップアップした場合、[はい] を選択します。<br>(4-6) OS の再起動を促すダイアログがポップアップした場合、指示に従い再起動します。表示されなかった場合には、手動で OS を再起動します。  </p><hr><p><code>変更履歴</code><br><code>2020/08/01 created by Mochizuki</code><br><code>2020/08/21 modified by Mochizuki</code>  </p>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Out Of Memory </tag>
            
            <tag> UWF servicing mode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Embedded 8 Standard で Windows Update がエラー 8007000E で失敗する (KB4571736 関連)</title>
      <link href="/blog/2020/08/13/WE8S-error-8007000E/"/>
      <url>/blog/2020/08/13/WE8S-error-8007000E/</url>
      
        <content type="html"><![CDATA[<p>Windows Embedded 8 Standard において、Windows Update がエラー 8007000E で失敗する現象の対処方法をご紹介します。</p><a id="more"></a><br><hr><p>Windows Embedded 8 Standard において、Windows Update がエラー 8007000E で失敗する現象が報告されております。この現象の修正を 2020 年 8 月のロールアップ更新プログラム (KB4571736) でリリースいたしました。  </p><ul><li><a href="https://support.microsoft.com/en-us/help/4571736/windows-server-2012-update" target="_blank" rel="noopener">August 11, 2020-KB4571736 (Monthly Rollup)</a></li></ul><p>当該現象が確認されている端末にて、KB4571736 (または以降のロールアップ更新プログラム) を適用することで改善が見込めます。すでに現象が発生している環境では、上記更新プログラムを Windows Update カタログ サイトから手動でダウンロードし、適用ください。  </p><ul><li><a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4571736" target="_blank" rel="noopener">Windows Update カタログ (KB4571736)</a></li></ul><p>修正される現象について、改めて以下にご紹介させていただきます。  </p><hr><h2 id="KB4571736-適用によって修正される現象"><a href="#KB4571736-適用によって修正される現象" class="headerlink" title="KB4571736 適用によって修正される現象"></a>KB4571736 適用によって修正される現象</h2><p>Windows Embedded 8 Standard で Windows Update の 「更新プログラムの確認」 をクリックすると、以下の様に 8007000E エラー (E_OUTOFMEMORY、メモリ不足) で失敗します。  </p><p><img src="https://jpiotblog.github.io/images/WE8S-error-8007000E/Error-8007000E.png" alt="WE8S-error-8007000E.png"></p><p>この現象は、どの環境でも再現するわけではありません。また、KB4571736 がリリースされるまでに Windows Update で配布される修正プログラムの重複の除外により、配布される容量の削減も行われ、再現率も低下しております。しかしながら、弊社で以下の条件の Hyper-V 仮想マシンで環境構築すれば、x86 でも x64 でも再現することを確認しました。</p><ul><li>世代の指定で 「第 1 世代」 を選択</li><li>メモリの割り当てで 「2048 MB」 を指定</li><li>Windows Embedded 8 Standard のテンプレートに 「ThinClient」 を選択</li></ul><br><p>以上の内容がお役に立てば幸いです。  </p><hr><p><code>変更履歴</code><br><code>2020/08/13 created by Tsuda</code>  </p>]]></content>
      
      
      <categories>
          
          <category> Windows Embedded 8 Standard </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Update </tag>
            
            <tag> 8007000E </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell Launcher でシャットダウンをキャンセルする方法について</title>
      <link href="/blog/2020/08/11/Cancel-shutdown-with-Shell-Launcher/"/>
      <url>/blog/2020/08/11/Cancel-shutdown-with-Shell-Launcher/</url>
      
        <content type="html"><![CDATA[<p>Shell Launcher でシャットダウンをキャンセルする方法についてご紹介します。  </p><a id="more"></a><br><hr><p>Shell Launcher でカスタムシェルアプリケーションを実行している時に、シャットダウンの通知を受け取って、未保存のデータを保存してからシャットダウンしたい場合があると思います。 </p><p>例えば、Explorer.exe がシェルとして実行されている時は、実行中のウィンドウ アプリケーションで、以下の様に予め ShutdownBlockReasonCreate() を実行しておき、シャットダウン時に WM_QUERYENDSESSION のウィンドウメッセージを受け取って FALSE を返せば、ユーザーがシャットダウンをキャンセルするかどうかを選ぶことができます。  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> wmId = LOWORD(wParam);</span><br><span class="line">            <span class="comment">// 選択されたメニューの解析:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                DestroyWindow(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> DefWindowProc(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">            HDC hdc = BeginPaint(hWnd, &amp;ps);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> HDC を使用する描画コードをここに追加してください...</span></span><br><span class="line">            EndPaint(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CREATE:</span><br><span class="line">        ShutdownBlockReasonCreate(hWnd, <span class="string">L"Don't do it!"</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        ShutdownBlockReasonDestroy(hWnd);</span><br><span class="line">        PostQuitMessage(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_QUERYENDSESSION:</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> DefWindowProc(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://jpiotblog.github.io/images/Cancel-shutdown-with-Shell-Launcher/Closing1app-and-shuttingdown.png" alt="Closing1app-and-shuttingdown.png"></p><p>誠に恐れ入りますが、<strong>Shell Launcher V1 では、制限として、これと同じことができる方法はありません。</strong></p><p><a href="https://docs.microsoft.com/en-us/windows-hardware/customize/enterprise/shell-launcher" target="_blank" rel="noopener">Shell Launcher</a></p><blockquote><p>You cannot prevent the system from shutting down. For Shell Launcher V1 and V2, you cannot block the session ending by returning FALSE upon receiving the WM_QUERYENDSESSION message in a graphical application or returning FALSE in the handler routine that is added through the SetConsoleCtrlHandler function in a console application.  </p></blockquote><p>上記ドキュメントでは Shell Launcher V2 でも方法がない旨の記載となっておりますが、現時点では、例外として、Shell Launcher V2 を用いた以下の手順であれば、同じことができることを確認していますので、その詳細をご紹介していきます。  </p><p>今回は、Windows 10 IoT Enterprise LTSC 2019 x64 を使用します。Shell Launcher V2 は Windows 10 バージョン 1809 以降でサポートされており、バージョン 1809 では KB4551853 をインストールすることでご利用いただけます。  </p><hr><h2 id="手順"><a href="#手順" class="headerlink" title="手順"></a>手順</h2><p>(1) Shell Launcher の機能を有効にした Windows 10 IoT Enterprise LTSC 2019 で、以下の KB を適用します。</p><ul><li><p><a href="https://support.microsoft.com/ja-jp/help/4551853/windows-10-update-kb4551853" target="_blank" rel="noopener">2020 年 5 月 12 日 - KB4551853 (OS ビルド 17763.1217)</a></p><p> インターネット接続がある場合は、上記を Windows Update で適用いただくだけで、以下の KB が適用されますが、インターネット接続がない場合には、上記を適用する前に、Microsoft Update カタログから適用ください。</p><p> <a href="https://www.catalog.update.microsoft.com/Search.aspx?q=KB4549947" target="_blank" rel="noopener">https://www.catalog.update.microsoft.com/Search.aspx?q=KB4549947</a></p></li></ul><p>(2) ShellLauncherBridgeWmiHelpers.ps1 を以下のサイトからコピーし、 Windows 10 IoT Enterprise LTSC 2019 の PC 上の任意のフォルダ (ここでは例として C:\test とします) に置きます。</p><ul><li><a href="https://docs.microsoft.com/en-us/samples/microsoft/windows-iotcore-samples/samplebridgewmiscripts/" target="_blank" rel="noopener">Shell Launcher V2 Bridge WMI Sample scripts</a></li></ul><p>(3) PsTools.zip を以下からダウンロードし、(2) のフォルダに置き、解凍します。</p><ul><li><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psexec" target="_blank" rel="noopener">PsExec v2.2</a></li></ul><p>(4) (UWP ではない) Windows フォームアプリとして、第二引数にメッセージ付きの ShutdownBlockReasonCreate() と SetProcessShutdownParameters() の第一引数に 0x500 を入れ、WM_QUERYENDSESSION は FALSE で返します。<br>ここでは、例として以下のコードとしています。<br>これをビルドしたモジュールを 2. のフォルダに置きます。  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> wmId = LOWORD(wParam);</span><br><span class="line">            <span class="comment">// 選択されたメニューの解析:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                DialogBox(hInst, MAKEINTRESOURCE(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                DestroyWindow(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> DefWindowProc(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">            HDC hdc = BeginPaint(hWnd, &amp;ps);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> HDC を使用する描画コードをここに追加してください</span></span><br><span class="line">            EndPaint(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CREATE:</span><br><span class="line">        SetProcessShutdownParameters(<span class="number">0x500</span>, <span class="number">0</span>);</span><br><span class="line">        ShutdownBlockReasonCreate(hWnd, <span class="string">L"Don't do it!"</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        ShutdownBlockReasonDestroy(hWnd);</span><br><span class="line">        PostQuitMessage(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_QUERYENDSESSION:</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> DefWindowProc(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(5) ShellLauncher.xml の例として、以下の様に記載したものを (2) のフォルダに置きます。Shell= の後にカスタムシェルアプリケーションへのフルパスを記載しています。DefaultAction には、Action=”DoNothing” としています。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">ShellLauncherConfiguration</span> <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/ShellLauncher/2018/Configuration"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:v2</span>=<span class="string">"http://schemas.microsoft.com/ShellLauncher/2019/Configuration"</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Profiles</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">DefaultProfile</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">Shell</span> <span class="attr">Shell</span>=<span class="string">"C:\test\SetProcessShutdownParameters.exe"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">DefaultAction</span> <span class="attr">Action</span>=<span class="string">"DoNothing"</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">Shell</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">DefaultProfile</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">Profiles</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">Configs</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ShellLauncherConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>(6) Windows 10 IoT Enterprise LTSC 2019 の PC 上で、管理者権限のコマンドプロンプトから、以下を実行します。これは、システムアカウントで powershell.exe を実行するために必須のため、省略しないようご注意ください。</p><p><code>psexec.exe -i -s powershell.exe</code></p><p>(7) (6) で起動した PowerShell 上で、cd コマンドで 2. のフォルダ (例 C:\test) に移動し、「<code>Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Scope LocalMachine</code>」などで .ps1 ファイルを実行可能にしたら、以下のコマンドを入力します。</p><p><code>. .\ShellLauncherBridgeWmiHelpers.ps1</code><br><code>Set-ShellLauncherBridgeWmi -FilePath .\ShellLauncher.xml</code></p><p>(8) OS を再起動したら、カスタムシェルアプリケーションが起動してきますので、シャットダウンしますと以下の様に表示されます。Shell Launcher V2 では、カスタムシェルアプリケーションのウィンドウは、必ず全画面表示になりますので、ここでのシャットダウンは、タスクマネージャーの [ファイル]-[新しいタスクの実行] でコマンドプロンプトを起動し、shutdown /s /t 0 を実行しています。  </p><p><img src="https://jpiotblog.github.io/images/Cancel-shutdown-with-Shell-Launcher/Closing4apps-and-shuttingdown.png" alt="Closing4apps-and-shuttingdown.png"></p><hr><h2 id="参考ドキュメント"><a href="#参考ドキュメント" class="headerlink" title="参考ドキュメント"></a>参考ドキュメント</h2><ul><li><a href="https://docs.microsoft.com/en-us/windows/configuration/kiosk-shelllauncher" target="_blank" rel="noopener">Use Shell Launcher to create a Windows 10 kiosk</a></li><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-shutdownblockreasoncreate" target="_blank" rel="noopener">ShutdownBlockReasonCreate function</a></li><li><a href="https://docs.microsoft.com/en-us/windows/win32/shutdown/wm-queryendsession" target="_blank" rel="noopener">WM_QUERYENDSESSION message</a></li><li><a href="https://docs.microsoft.com/en-us/windows/win32/api/processthreadsapi/nf-processthreadsapi-setprocessshutdownparameters" target="_blank" rel="noopener">SetProcessShutdownParameters function</a>  <br>  </li></ul><p>以上の内容がお役に立てば幸いです。</p><hr><p><code>変更履歴</code><br><code>2020/08/11 created by Tsuda</code>  </p>]]></content>
      
      
      <categories>
          
          <category> Shell Launcher </category>
          
      </categories>
      
      
        <tags>
            
            <tag> シャットダウン </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UWF 機能を有効化した環境で Sysprep を用いたマスター イメージを作成する場合の留意点について</title>
      <link href="/blog/2020/07/27/UWF-sysprep/"/>
      <url>/blog/2020/07/27/UWF-sysprep/</url>
      
        <content type="html"><![CDATA[<p>UWF 機能を有効化した環境で Sysprep を用いたマスター イメージを作成する場合の留意点をご紹介いたします。</p><a id="more"></a><br><hr><p>統合書き込みフィルター (UWF) は、Windows 10 のオプション機能になります。端末のキッティングにあたり UWF 機能を有効化した状態でマスター イメージを作成する場合、まずは以下のサイトの情報に従い UWF 機能をインストールします。  </p><ul><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwf-turnonuwf#turn-on-uwf-on-a-running-pc" target="_blank" rel="noopener">統合書き込みフィルター (UWF) 機能の使用</a><blockquote><p>(抜粋)<br> 1. 次の機能をインストールします。<br> a. [スタート] をクリックし、「 Windows の機能の有効化または無効化」と入力します。<br> b. [Windows の機能] ウィンドウで、 [デバイスロックダウン] ノードを展開し、[統合書き込みフィルター &gt; OK] をオンにします。<br> : ※ 一部省略<br> c. [閉じる] をクリックして、 [Windows の機能] ウィンドウを閉じます。</p></blockquote></li></ul><p>インストールが完了した状態は、UWF フィルターは無効化されています。この状態で sysprep を実行し、マスター イメージを作成ください。<br>既に UWF のフィルターを有効化していた場合、後述の留意事項をご確認ください。</p><h3 id="留意事項について"><a href="#留意事項について" class="headerlink" title="留意事項について"></a>留意事項について</h3><p>UWF フィルターを有効化した状態や、ボリューム保護の設定をした後でマスター イメージを作成した場合、UWF の設定が正常に引き継がれません。以下の留意点をご確認いただき、それぞれ設定の無効化を実施ください。</p><ul><li><p>UWF フィルターを有効化した環境の場合、sysprep を実行してもイメージの一般化は行われません。UWF フィルターを有効化した環境の場合、以下のコマンドを実行後、OS を再起動して UWF フィルターを無効化ください。  </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr filter disable</span><br></pre></td></tr></table></figure></li><li><p>ドライブの書き込み保護の設定は、イメージの展開後の環境では有効に動作いたしません。これは、UWF が保持している保護対象ボリュームの GUID が、イメージ展開後の環境で変わってしまうためです。もし C ドライブの保護設定を行っていた場合、以下のコマンドを実行後に OS を再起動し、保護を解除ください。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr volume unprotect C:</span><br></pre></td></tr></table></figure></li></ul><p>※ UWF の除外パスやオーバーレイの設定につきましては、イメージ展開後に問題が発生したという報告はございません。しかしながら、設定するパスや展開後の環境に依存して問題が発生する可能性がございますので、基本的にイメージ展開後に実行することを推奨いたします。<br></br></p><hr><p><code>変更履歴</code><br><code>2020/07/27 created by Mochizuki</code>  </p>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sysprep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uwfmgr.exe ツールの Commit/Commit-Delete コマンドについて</title>
      <link href="/blog/2020/06/29/UWF-commit/"/>
      <url>/blog/2020/06/29/UWF-commit/</url>
      
        <content type="html"><![CDATA[<p>UWF オーバーレイの保護領域に対して、ファイルやレジストリの変更を反映させる方法についてお纏めします。</p><a id="more"></a><br><hr><p>※ uwfmgr.exe ツールの利用法は、<a href="https://docs.microsoft.com/en-us/windows-hardware/customize/enterprise/uwfmgrexe" target="_blank" rel="noopener">こちら</a> を参照ください。  </p><hr><h2 id="uwfmgr-exe-File-Commit-Commit-Delete-について"><a href="#uwfmgr-exe-File-Commit-Commit-Delete-について" class="headerlink" title="uwfmgr.exe File Commit/Commit-Delete について"></a>uwfmgr.exe File Commit/Commit-Delete について</h2><p>UWF オーバーレイの保護領域に対してファイル操作を行った場合、OS 再起動後にこれらの操作内容がリセットされます。この時、uwfmgr.exe File Commit/Commit-Delete によって、変更内容がリセットされないよう “コミット” することが可能です。コミットしたタイミングの変更内容が実際のシステムに反映されます。  </p><p>ファイルの作成、変更を反映する場合、uwfmgr.exe file commit を使用します。実行はファイル単位で、正規表現は使用できません。  </p><ul><li>例 (c:\temp\test.txt の変更反映) <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe file commit &quot;c:\temp\test.txt&quot;</span><br></pre></td></tr></table></figure></li></ul><p>ファイルの削除を反映する場合、uwfmgr.exe file commit-delete を使用します。実行はファイル単位ですが、空のフォルダーに対しても使用可能です。正規表現は使用できません。<br>ファイル削除後に実行するのではなく、コマンドを実行によってファイルを削除します。  </p><ul><li><p>例 (c:\temp\test.txt の削除反映):</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe file commit-delete &quot;c:\temp\test.txt&quot;</span><br></pre></td></tr></table></figure></li><li><p>例 (c:\temp の削除反映 ※ 空のフォルダーである必要があります):</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe file commit-delete &quot;c:\temp&quot;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>補足 1:<br>新しくフォルダーを作成し、その配下に作成したファイルに対して uwfmgr file commit を実行した場合、作成したフォルダーを含めてコミットされます。逆に、フォルダー内のファイルを全て uwfmgr file commit-delete で削除後、空のフォルダーを削除する場合には uwfmgr file commit-delete をそのフォルダーに対して実行することでフォルダーの削除がコミットされます。  </p></blockquote><blockquote><p>補足 2:<br>現状、新しく作成したフォルダーのみ (空の状態) をコミットする方法がありません。代替策として、フォルダーの配下に適当なファイルを作成し Commit 実行後、Comite-Delete で削除することでフォルダーのみをコミットしたことと同等の結果を得ることが可能です。</p><ul><li>例 (c:\temp フォルダーのみコミットする場合):<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir c:\temp</span><br><span class="line">echo commit &gt; c:\temp\test.txt</span><br><span class="line">uwfmgr file commit c:\temp\test.txt</span><br><span class="line">uwfmgr file commit-delete c:\temp\test.txt</span><br></pre></td></tr></table></figure>2 行目の echo コマンドで commit という文字列を c:\temp\test.txt へ標準出力し、ファイルを作成します。<br>3 行目で作成されたファイルをコミットし、4 行目で削除します。</li></ul></blockquote><hr><h2 id="uwfmgr-exe-Registry-Commit-Commit-Delete-について"><a href="#uwfmgr-exe-Registry-Commit-Commit-Delete-について" class="headerlink" title="uwfmgr.exe Registry Commit/Commit-Delete について"></a>uwfmgr.exe Registry Commit/Commit-Delete について</h2><p>UWF オーバーレイによってシステムの利用領域を保護している状態でレジストリ キーや値の変更を行った場合、OS 再起動後に変更内容はリセットされます。この時、uwfmgr.exe Registry Commit/Commit-Delete によって、変更内容がリセットされないよう “コミット” することが可能です。コミットしたタイミングの変更内容がシステムに反映されます。  </p><p>レジストリ キー、値の作成、変更を反映する場合、uwfmgr.exe registry commit を使用します。実行は値単位で、正規表現は使用できません。    </p><ul><li>例 (HKLM\SOFTWARE\test キー配下の値 test の変更反映): <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe registry commit &quot;HKLM\SOFTWARE\test&quot; test</span><br></pre></td></tr></table></figure></li></ul><p>レジストリ キー、値の削除を反映する場合、uwfmgr.exe registry commit-delete を使用します。キーのみを指定して削除を実行することが可能です。<br>レジストリ キー、値を削除後に実行するのではなく、コマンドを実行によって削除します。  </p><ul><li><p>例 (HKLM\Software\test キー配下の値 test の削除反映):</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe registry commit-delete &quot;HKLM\Software\test&quot; test</span><br></pre></td></tr></table></figure></li><li><p>例 (HKLM\Software\test キーの削除反映):</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe registry commit-delete &quot;HKLM\Software\test&quot;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>補足:<br>HKLM 以外のレジストリ ハイブ (例えば、HKCR、HKCU など) のキー、サブ キー、値の作成や変更、削除は行えません。また、HKLM 自体や、HKLM\Software, HKLM\System, HKLM\SAM, HKLM\Security, HKLM\Components キーを変更対象とすることはできません。これらは仕様上、実行が拒否されます。</p></blockquote><hr><p><code>変更履歴</code><br><code>2020/06/29 created by Mochizuki</code>  </p>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uwfmgr.exe </tag>
            
            <tag> Commit/Commit-Delete </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>長期間稼働するシステムでの UWF 有効化について</title>
      <link href="/blog/2020/02/20/UWF-longtermup/"/>
      <url>/blog/2020/02/20/UWF-longtermup/</url>
      
        <content type="html"><![CDATA[<p>長期間稼働するシステムで UWF を有効化する場合の、一般的な留意事項をご紹介します。</p><a id="more"></a><br><hr><p>UWF を有効化している環境において、オーバーレイ領域が不足するとシステムが動作しなくなるため、定期的にシステムを再起動してオーバーレイ領域をフラッシュする必要があります。  </p><p>オーバーレイ領域の消費傾向はその環境のご利用方法に依存します。例えば、新しいファイルの作成や更新が頻繁に行われるシステムでは、オーバーレイが比較的早く消費します。逆に、新しいファイルの作成は行われず、限定された動作のみを行うシステムでは消費は少ないことが想定されます。オーバーレイ領域の消費傾向が把握できていないシステムにおきましては、長期間連続稼働 (例: 24 時間 365 日) を要件するシステムでの UWF 利用はお勧めしません。  </p><p>システムを再起動せず稼働可能な期間を判断するためには、UWF を有効化して模擬運用を実施し、オーバーレイの消費傾向を把握することをお勧めします。運用が周期的に行われる場合、周期の最大期間 (例: 一週間、または一ヶ月など) を目途に模擬運用を継続ください。消費傾向からシステム再起動タイミングを逆算したり、どのような操作が最もオーバーレイを消費しているかを確認して、利用方法の変更やオーバーレイ領域の拡大をご検討ください。  </p><p>検討方法例:  </p><p>(1) 一週間または一ヶ月などの運用周期となる期間、運用試験を実施し、オーバーレイの消費傾向を把握します。</p><ul><li>消費量 / 残容量の確認:   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr overlay get-consumption  </span><br><span class="line">uwfmgr overlay get-availablespace</span><br></pre></td></tr></table></figure></li></ul><p>(2) 試験結果を基に、システム再起動間隔でオーバーレイが枯渇しないよう設定値を決定します。  </p><p>例:<br>オーバーレイ消費傾向: 約 200 MB / 日<br>システム再起動間隔　: 一週間毎  </p><ul><li>7 日 x 200 MB = 1400 MB / 週、ただし操作によっては消費量が増えることを想定して約 2 倍超の 3 GB = 3072 MB と設定   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr overlay set-size 3072</span><br></pre></td></tr></table></figure></li><li>一週間通常使用しても警告を出力しないように 1.5 GB = 1536 MB と設定 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr overlay set-warningthreshold 1536</span><br></pre></td></tr></table></figure></li><li>重大エラー表示後 2 日間余裕があるように 2.5 GB = 2560 MB と設定 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr overlay set-criticalthreshold 2560</span><br></pre></td></tr></table></figure></li><li>RAM 上に 3072 MB を確保するのが難しい場合は Disk オーバーレイを設定<br> ※ OS 再起動後、set-size で指定したサイズの隠しファイル C:\uwfswap.sys が作成されます。 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr overlay set-type disk</span><br></pre></td></tr></table></figure></li><li>設定を反映させるため OS を再起動 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shutdown -r -t 0</span><br></pre></td></tr></table></figure><br></li></ul><p>関連する公開情報をご紹介します。  </p><ul><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwfoverlay" target="_blank" rel="noopener">統合書き込みフィルター (UWF) オーバーレイの位置とサイズ</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/959a7f26-3b2a-4336-9882-696bc21efbe1/windows-10?forum=Wcsupportja" target="_blank" rel="noopener">Windows 10 の統合書き込みフィルター機能 (UWF) で、フィルターの除外設定を行ってもオーバーレイのメモリを消費してしまう</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/4276f895-6266-4d4a-92dd-507ed694aab3/uwf-26377211771239512375123901236312425-6?forum=Wcsupportja" target="_blank" rel="noopener">UWF 有効にしてから 6 ヶ月経過すると一部の通知アイコンが表示されない現象について</a>  </li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uwfmgr.exe </tag>
            
            <tag> オーバーレイ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UWF の除外設定について</title>
      <link href="/blog/2020/02/19/UWF-exclusions/"/>
      <url>/blog/2020/02/19/UWF-exclusions/</url>
      
        <content type="html"><![CDATA[<p>UWF の除外設定を実施するにあたり、留意いただきたい内容をお纏めいたします。</p><a id="more"></a><br><hr><h2 id="除外設定に関するお問い合わせについて"><a href="#除外設定に関するお問い合わせについて" class="headerlink" title="除外設定に関するお問い合わせについて"></a>除外設定に関するお問い合わせについて</h2><p>UWF は、保護対象領域に対する書き込みをオーバーレイ領域でキャッシュし、OS 再起動をトリガーにキャッシュした情報をリセットして、UWF を有効化した時点に戻します。ある製品を動作させようとしたときに、OS 再起動後に情報がリセットされると不都合が発生する場合、除外設定を追加することで期待通りに動作させることができる可能性があります。<br>この時、各製品で必要な除外設定につきましては、各製品サポートよりご案内させていただいております。下記例を参照ください。  </p><ul><li><p>質問例 1. Windows Defender に必要な除外設定を教えてほしい<br> -&gt; Windows Defender の製品サポートへお問い合わせください</p></li><li><p>質問例 2. Wi-Fi の接続情報を OS 起動後も維持したい<br> -&gt; Windows OS の製品サポート (ネットワーク担当) へお問い合わせください</p></li><li><p>質問例 3. A 社の製品を UWF 有効化した状態で動作させることは可能か<br> -&gt; A 社製品ベンダーへお問い合わせください</p></li></ul><p>除外設定の追加によって何らかの問題が発生した場合、除外対象パスを使用するプロセス側にて調査が必要となる場合がございます。対象の製品サポートへ事例の有無や対処方法についてお問い合わせください。  </p><hr><h2 id="除外を推奨しないパスについて"><a href="#除外を推奨しないパスについて" class="headerlink" title="除外を推奨しないパスについて"></a>除外を推奨しないパスについて</h2><p>システムの起動の初期段階でアクセスするフォルダ (C:\Windows 配下など) は、他のデータと一貫性を持っているため、一部のフォルダーのみを除外することで問題が発生する場合があります。この一貫性が崩れた場合、システムがハンドルできない問題が発生し 「SYSTEM THREAD EXCEPTION NOT HANDLED」 エラー表示されます。これは、システム内部にて Access violation が発生 (アクセスできる情報としてアクセスしたが、情報が無いか権限が無く失敗) することでシステムの起動が進められなくなるためです。  </p><p>なお、レジストリの除外については下記公開情報のとおり、HKLM レジストリ ハイブの幾つかのキー配下のサブキーでのみ実行いただけます。こちらに該当しないレジストリを除外設定しようとすると、アクセス拒否のエラーと共に実行が失敗します。仮に設定時にエラーが出なかった場合でも、HKCU や HKU 配下など、除外が許可されていない (マイクロソフト側で正常動作を保証しない) パスにつきましては、書き込み結果の不整合による予期しない動作の原因になります。    </p><ul><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwf-registryfilteraddexclusion" target="_blank" rel="noopener">UWF_RegistryFilter.AddExclusion</a>  <blockquote><p>! 重要<br>除外リストには、次のレジストリ キーの下のレジストリ サブキーのみを追加できます。</p><ul><li>HKEY_LOCAL_MACHINE\BCD00000000</li><li>HKEY_LOCAL_MACHINE\SYSTEM</li><li>HKEY_LOCAL_MACHINE\SOFTWARE</li><li>HKEY_LOCAL_MACHINE\SAM</li><li>HKEY_LOCAL_MACHINE\SECURITY</li><li>HKEY_LOCAL_MACHINE\COMPONENTS</li></ul></blockquote></li></ul><br>下記公開情報には、一般的な除外設定に加えて、除外を推奨しないパスの情報も含まれております。主にファイルのパスですが、一部レジストリ パスもございます。除外設定の際にご参照ください。  <ul><li><p><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwfexclusions" target="_blank" rel="noopener">書き込みフィルターの除外</a>  </p><blockquote><p>! 重要<br>次の除外を追加しないでください。</p><ul><li>\Windows\System32\config\DEFAULT  </li><li>\Windows\System32\config\SAM  </li><li>\Windows\System32\config\SECURITY  </li><li>\Windows\System32\config\SOFTWARE  </li><li>\Windows\System32\config\SYSTEM  </li><li>\Users\&lt;User Name&gt;\NTUSER.DAT  </li><li>\Windows\BOOTSTAT.DAT  </li><li><System Drive>\EFI\Microsoft\Boot\BOOTSTAT.DAT  </li><li><System Drive>\Boot\BOOTSTAT.DAT  </li></ul><p>また、次の項目の除外を追加しないでください。  </p><ul><li>ボリュームルート。 例: C: または d:  </li><li>システムボリューム上のフォルダー。\Windows  </li><li>システムボリューム上のフォルダー。\Windows\System32  </li><li>システムボリューム上のフォルダー。\Windows\System32\Drivers  </li><li>ページングファイル。  </li></ul><p>これらのアイテムの除外の追加はサポートされていないため、予期しない結果が生じる可能性があります。 これらの場所にあるサブディレクトリとファイルを除外するのは問題ありません。</p></blockquote><blockquote><p>! 重要<br>次の除外を追加しないでください。</p><ul><li>HKLM\SECURITY\Policy\Secrets$MACHINE.ACC</li></ul></blockquote></li><li><p><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/unified-write-filter" target="_blank" rel="noopener">統合書き込みフィルター (UWF) 機能</a> </p><blockquote><p>! 注意<br>この問題を回避するには、日付と時刻の設定 (“%windir%\bootstat.dat”) を保持するファイルを書き込みフィルターの除外に追加しないでください。 これにより、Stop エラー 0x7E (SYSTEM_THREAD_EXCEPTION_NOT_HANDLED) が発生します。</p></blockquote></li></ul><br>また、公開情報へ追加リクエスト中の内容となりますが、下記についても除外を設定しないようお願いいたします。  <ul><li><p>C:\Windows\WinSXS フォルダー</p><blockquote><p>Winodws 10 Enterprise 2019 LTSC では、C:\Windows\WinSXS フォルダーを除外するとシステム起動時に 「SYSTEM THREAD EXCEPTION NOT HANDLED」 で BSOD が発生するという報告がございます。C:\Windows\WinSXS フォルダー配下にはシステム起動初期にアクセスする情報が含まれておりますため、除外をお勧めいたしません。  </p></blockquote></li></ul><hr><h2 id="Windows-Defender-用の除外設定について"><a href="#Windows-Defender-用の除外設定について" class="headerlink" title="Windows Defender 用の除外設定について"></a>Windows Defender 用の除外設定について</h2><p>弊社より提供させていただいておりますマルウェア対策ソフトウェア (Windows Defender および System Center Endpoint Protection) につきましては、除外設定を下記サイトにて公開しております。  </p><p><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwf-antimalware-support" target="_blank" rel="noopener">UWF で保護されているデバイスでマルウェア対策のサポート</a>  </p><p>また、これらの除外設定に伴い発生する問題の事例をご紹介します。比較的新しいバージョンの OS (Windows 10 バージョン 1909 以降) におきましては、2020/6/17 現在にて発生報告は確認されておりません。関連すると思われる問題が確認された場合には、Windows Defender 製品サポートへお問い合わせください。  </p><ul><li><p>Windows Defender のレジストリを除外すると OS 起動時にハングアップする  </p><blockquote><p>下記レジストリ キーを除外していると、OS 起動時にハングアップして起動できない場合があります。レースコンディションによるものであり、スペックの低い端末で発生する傾向にあります。OS 側での修正は困難であるため、Wdfilter の除外解除等をご検討ください。  </p><ul><li>HKLM\System\CurrentControlSet\Services\WdFilter  </li><li>HKLM\SYSTEM\ControlSet001\Control\DeviceClasses{53f5630d-b6bf-11d0-94f2-00a0c91efb8b}  </li></ul></blockquote><blockquote><p>Windows 10 Enterprise 2016 LTSB の環境では下記除外が入っていた場合にも同様の問題が発生するという報告があります。該当する場合にはこちらの除外解除もご検討ください。  </p><ul><li>HKLM\SOFTWARE\Classes\TypeLib{8C389764-F036-48F2-9AE2-88C260DCF43B}  </li><li>HKLM\SOFTWARE\Classes\CLSID{A2D75874-6750-4931-94C1-C99D3BC9D0C7}  </li><li>HKLM\SOFTWARE\Classes\CLSID{195B4D07-3DE2-4744-BBF2-D90121AE785B}  </li></ul></blockquote></li></ul><hr><p><code>変更履歴</code><br><code>2020/02/19 created by Mochizuki</code><br><code>2020/06/16 modified by Mochizuki</code><br><code>2020/09/09 modified by Mochizuki</code>  </p>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> uwfmgr.exe </tag>
            
            <tag> 除外設定 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UWF を有効化した環境でメモリ ダンプを取得する方法</title>
      <link href="/blog/2020/02/12/UWF-dump-setting/"/>
      <url>/blog/2020/02/12/UWF-dump-setting/</url>
      
        <content type="html"><![CDATA[<p>UWF を有効化した環境で、メモリ ダンプを取得する方法についてご紹介します。</p><a id="more"></a><br><hr><h2 id="はじめに"><a href="#はじめに" class="headerlink" title="はじめに"></a>はじめに</h2><ul><li><p>概要  </p><p> 強制メモリ ダンプを取得することで、現象発生時のメモリの状態を Memory.dmp ファイルとして保存し、そこから現象発生時のオペレーティング システムのメモリの状態や、行われていた処理などの詳細を確認することができます。  </p></li><li><p>影響  </p><p> メモリ ダンプ取得のためのシャットダウン操作は、正常にシステムを停止させる方法ではないことを予めご留意ください。システムが正常に動作しない問題の調査方法として、他に方法が無い場合にご案内させていただいております。運用環境で、且つ回避策がある場合には、極力実施をお勧めいたしません。  </p></li><li><p>再起動の必要性  </p><p> 事前準備時、メモリダンプ採取時に再起動が必要です。  </p></li><li><p>採取ファイル  </p><p>本手順では “D:\Dumps\Memory.dmp” として進めさせていただきます。  </p></li></ul><hr><h2 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h2><ul><li><p>システム ドライブ以外に、メモリ ダンプを保存するボリュームを追加し、いずれかのドライブとしてマウントします。<br>※ この手順では D: ドライブとします。  </p></li><li><p>事前に UWF フィルターとボリュームの保護を実行します。この過程で PageFile の設定が一旦初期化されます。  </p><p> 実行例:<br> ※ この手順ではシステム ドライブを C: ドライブとします。 </p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe volume protect c:  </span><br><span class="line">uwfmgr.exe filter enable  </span><br><span class="line">shutdown -r -t 0</span><br></pre></td></tr></table></figure></li></ul><hr><h2 id="Dump-出力設定手順"><a href="#Dump-出力設定手順" class="headerlink" title="Dump 出力設定手順"></a>Dump 出力設定手順</h2><ol><li><p>UWF フィルターを無効化する。  </p><p>実行例:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe filter disable  </span><br><span class="line">shutdown -r -t 0</span><br></pre></td></tr></table></figure></li><li><p>PageFile の大きさを 物理メモリ + 300 Mbyte 以上の大きさに設定する。</p><p>実行例:<br>a) [エクスプローラ] - [コンピュータ] を右クリックし [プロパティ(R)] をクリックします。<br>b) [システムの詳細設定] をクリックします。<br>c) [詳細設定] タブの [パフォーマンス] にある [設定(S)] をクリックします。<br>d) [詳細設定] タブの [仮想メモリ] の項目にある [変更(C)] ボタンをクリックします。<br>e) この画面にて、[すべてのドライブのページング ファイルのサイズを自動的に管理する(A)] オプションを外します。<br>f) 手順 1) で作成したシステムドライブ以外のドライブ (ここでは D:) をクリックします。<br>g) [カスタムサイズ] にチェックを付け、[初期サイズ]、[最大サイズ] の両方に物理メモリ + 300 Mbyte 以上の値を入力します。 (例えば 4096MB メモリの場合、4396MB)<br>h) その後 [設定] ボタンをクリックし設定を反映させ [OK] ボタンをクリックします。<br>i) “変更結果はコンピューターを再起動しなければ有効になりません。” というポップアップが表示されますので、[OK] ボタンをクリックします。<br>j) “パフォーマンス オプション” のウィンドウも [OK] ボタンにて閉じます。  </p><p>※ 補足<br>この設定値は、次のレジストリに反映されます。なお、直接レジストリ値を編集することでも、ページング ファイル サイズを設定することができます。  </p><p>キー: <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Memory Management</code><br>名前: <code>PagingFiles</code><br>種類: <code>REG_MULTI_SZ</code><br>データ: &lt;ページ ファイル保存先&gt; &lt;初期サイズ (MB)&gt; &lt;最大サイズ (MB)&gt; (設定例: <code>d:\pagefile.sys 4396 4396</code>)</p></li><li><p>完全メモリ ダンプ (Full Dump) が生成されるよう設定する。  </p><p>a) [エクスプローラ] - [コンピュータ] を右クリックし、[プロパティ] をクリックします。<br>b) 左ペインにある [システムの詳細設定] をクリックします。<br>c) “システムのプロパティ” の [詳細設定] タブの [起動と回復] 枠内にある [設定] ボタンをクリックします。<br>d) “起動と回復” の [デバッグ情報の書き込み] 枠内にあるプルダウン メニューから [完全メモリ ダンプ] を選択し、[OK] ボタンを 2 回クリックします。  </p></li><li><p>[ダンプ ファイル] のパスを変更する。  </p><p>※ 注意<br>GUI から [完全メモリ ダンプ] を選択する事と併せて、以下のレジストリ エディタで、次のレジストリの値が設定されている事をご確認ください。  </p><p>キー: <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\CrashControl</code><br>名前: <code>CrashDumpEnabled</code><br>種類: <code>REG_DWORD</code><br>データ: <code>1</code>  </p><p>メモリ ダンプの出力先は、次のレジストリ値で確認できます。  </p><p>キー: <code>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\CrashControl</code><br>名前: <code>DumpFile</code><br>種類: <code>REG_EXPAND_SZ</code><br>データ(既定値): <code>D:\Dumps\MEMORY.DMP</code>  </p></li><li><p>DedicatedDumpFile.sys を設定する。  </p><p>レジストリ エディタで、次のレジストリの値を設定してください。  </p><p>キー: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CrashControl</code><br>名前: <code>DedicatedDumpFile</code><br>種類: <code>REG_SZ</code><br>データ: <code>D:\dedicateddumpfile.sys</code>  </p><p>キー: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CrashControl</code><br>名前: <code>DumpFileSize</code><br>種類: <code>REG_DWORD</code><br>データ: &lt;10 進数でメモリサイズ + 300 MB を設定ください&gt; (設定例: <code>4396</code>)  </p></li><li><p>(オプション) AlwaysKeepMemoryDump を設定する。  </p><p>Client OS におけるメモリ ダンプでは WorkGroup 環境の場合、ダンプ ファイル格納ボリュームの空き容量が25 GB 未満の場合、ダンプ ファイルが削除される動作となります (Domain 環境の場合、25 GB の制限には合致いたしません)。<br>そのため、対象の端末が Workgroup 環境の場合には、以下のレジストリ値を設定いただき、ダンプ ファイルが上記制限に合致しないよう設定いただく事をご検討いただければと存じます。  </p><p>キー: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CrashControl</code><br>名前: <code>AlwaysKeepMemoryDump</code><br>種類: <code>REG_DWOD</code><br>データ : <code>1</code>  </p><p>公開情報:<br><a href="https://blogs.msdn.microsoft.com/wer/2009/02/09/kernel-dump-storage-and-clean-up-behavior-in-windows-7/" target="_blank" rel="noopener">Kernel dump storage and clean up behavior in Windows 7</a>  </p></li><li><p>(オプション) キーボードから STOP エラーを発生できるように設定する。  </p><p>事象発生時にメモリ ダンプの生成を行えるよう、トリガーの設定を行います。レジストリ エディタで、次のレジストリの値を設定してください。  </p><p>&lt;PS/2 キーボードの場合&gt;<br>キー: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\i8042prt\Parameters</code><br>名前: <code>CrashOnCtrlScroll</code><br>種類: <code>REG_DWORD</code><br>データ: <code>1</code>  </p><p>&lt;USB キーボードの場合&gt;<br>キー: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\kbdhid\Parameters</code><br>名前: <code>CrashOnCtrlScroll</code><br>種類: <code>REG_DWORD</code><br>データ: <code>1</code>  </p></li><li><p>(オプション) NMI スイッチを使用できるように設定する。  </p><p>Windows の機能ではなく、ご使用のハードウェアにメモリ ダンプ取得のための NMI (Non-Maskable Interrupt) スイッチが備わっている場合、以下にご案内するキーボードでクラッシュさせる方法よりも割り込みレベルが高いため、ご使用いただくことをお勧めします。<br>ご使用のハードウェアに当該機能が備わっているか、また、使用方法につきましては、ハードウェアの取扱説明書、あるいはハードウェアご提供元様にご確認ください。  </p><p>また、Windows 側の設定として、レジストリ エディタで、次のレジストリの値を設定ください。  </p><p>キー: <code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\CrashControl</code><br>名前: <code>NMICrashDump</code><br>種類: <code>REG_DWORD</code><br>データ: <code>1</code>  </p></li><li><p>UWF を有効化し、OS を再起動する。  </p><p>実行例:  </p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uwfmgr.exe filter enable  </span><br><span class="line">shutdown -r -t <span class="number">0</span></span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="Dump-の出力手順"><a href="#Dump-の出力手順" class="headerlink" title="Dump の出力手順"></a>Dump の出力手順</h2><p>調査対象の事象が発生した際に、NMI もしくはキーボード操作によってメモリ ダンプを出力させます。  </p><ul><li>取得対象: <code>D:\Dumps\Memory.dmp</code>  </li></ul><hr><h2 id="※-参考情報"><a href="#※-参考情報" class="headerlink" title="※ 参考情報"></a>※ 参考情報</h2><ul><li><p><a href="http://support.microsoft.com/kb/969028" target="_blank" rel="noopener">Windows Server 2008 および Windows Server 2008 R2 でカーネルまたは完全メモリ ダンプ ファイルを生成する方法</a>  </p></li><li><p><a href="http://support.microsoft.com/kb/254649/en-us" target="_blank" rel="noopener">Overview of memory dump file options for Windows 2000, Windows XP, Windows Server 2003, Windows Vista, Windows Server 2008, Windows 7 and Windows Server 2008 R2</a>  </p></li><li><p><a href="http://support.microsoft.com/kb/254649/ja" target="_blank" rel="noopener">メモリ ダンプ ファイルのオプションは、Windows 2000、Windows XP、Windows Server 2003、Windows Vista、Windows Server 2008、Windows 7 と Windows サーバー 2008 R2 の概要 (機械翻訳)</a>  </p></li><li><p><a href="http://blogs.technet.com/b/askcore/archive/2012/09/12/windows-8-and-windows-server-2012-automatic-memory-dump.aspx" target="_blank" rel="noopener">Windows 8 and Windows Server 2012: Automatic Memory Dump (英文のみ)</a></p></li><li><p><a href="http://support.microsoft.com/kb/2750146" target="_blank" rel="noopener">NMI_HARDWARE_FAILURE error when an NMI is triggered on Windows 8 and Windows Server 2012 (英文のみ)</a>  </p></li><li><p><a href="http://support.microsoft.com/kb/244139" target="_blank" rel="noopener">Windows の機能により、キーボード操作で Memory.dmp ファイルを作成できる</a>  </p></li><li><p><a href="http://support.microsoft.com/kb/130536" target="_blank" rel="noopener">クラッシュ後 Windows でメモリ ダンプ ファイルが保存されない</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> メモリ ダンプの設定手順 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UWF 関連トラブル時の情報採取手順について</title>
      <link href="/blog/2020/01/26/CollectInfo_UWF/"/>
      <url>/blog/2020/01/26/CollectInfo_UWF/</url>
      
        <content type="html"><![CDATA[<p>UWF 機能に関連するトラブル発生時の情報採取手順を紹介します。</p><a id="more"></a><br><hr><h2 id="対象"><a href="#対象" class="headerlink" title="対象"></a>対象</h2><p>事象発生マシン (OS: Windows 10 Enterprise または Windows 10 IoT Core, Windows 10 IoT Enterprise)  </p><h2 id="事前準備"><a href="#事前準備" class="headerlink" title="事前準備"></a>事前準備</h2><p><a href="https://jpiotblog.github.io/files/CollectInfo_UWF.txt" title="CollectInfo_UWF.txt">こちら</a> から CollectInfo_UWF.txt ファイルをダウンロードし、拡張子を .txt から .bat に変更、実施対象の任意の場所に格納します。  </p><p>&lt;実施対象に以下が存在する状態&gt;<br>・ [任意の場所]\CollectInfo_UWF.bat ファイル</p><h2 id="影響"><a href="#影響" class="headerlink" title="影響"></a>影響</h2><p>ログを採取することで負荷が上がる可能性は考えられますが、基本的に OS リソースや処理への影響はありません。  </p><h2 id="実行手順"><a href="#実行手順" class="headerlink" title="実行手順"></a>実行手順</h2><p>(1) 事象発生マシンに管理者アカウントでログオンします。<br>(2) CollectInfo_UWF.bat ファイルを右クリックし、[管理者として実行] を選択します。<br>(3) “Please enter the number you want to execute. Enter q to quit tool.” メッセージに <code>1</code> を入力、リターン キーを押下し、表示に従いメニューに戻ります。<br>(4) “Please enter the number you want to execute. Enter q to quit tool.” メッセージに <code>q</code> を入力、リターン キーを押下してツールを終了します。<br>(5) デスクトップ上 <code>&lt;YYYYMMDD 形式の年月日&gt;_&lt;ホスト名&gt;_info</code> フォルダーを圧縮し、お問い合わせいただく際にご提供ください。  </p><hr><p>本記事は 「<a href="https://jpiotblog.github.io/blog/2020/01/01/about-jpiotblog/">jpiotblog について</a>」 の留意事項に準じます。  </p><p><code>変更履歴</code><br><code>2020/01/26 created by Mochizuki</code><br><code>2020/08/31 modified by Mochizuki</code></p>]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 情報採取手順 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FAQ (Unified Write Filter (UWF))</title>
      <link href="/blog/2020/01/16/UWF-FAQ/"/>
      <url>/blog/2020/01/16/UWF-FAQ/</url>
      
        <content type="html"><![CDATA[<p>UWF 機能に関してよくあるご質問とその回答をまとめております。</p><a id="more"></a><br><hr><h4 id="製品を理解するために参考となる公開情報を教えて欲しい"><a href="#製品を理解するために参考となる公開情報を教えて欲しい" class="headerlink" title="製品を理解するために参考となる公開情報を教えて欲しい"></a>製品を理解するために参考となる公開情報を教えて欲しい</h4><details><summary style="font-size: 10pt">回答</summary><ul><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/unified-write-filter" target="_blank" rel="noopener">統合書き込みフィルター (UWF) 機能</a>  <blockquote><p>機能の概要、要件、制限事項、各機能の紹介など  </p></blockquote></li><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwf-turnonuwf" target="_blank" rel="noopener">Unified Write Filter (UWF) 機能を使用します。</a>  <blockquote><p>UWF の有効化方法  </p></blockquote></li><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwfoverlay" target="_blank" rel="noopener">統合書き込みフィルター (UWF) オーバーレイの位置とサイズ</a>  <blockquote><p>オーバーレイに関する情報  </p></blockquote></li><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwfexclusions" target="_blank" rel="noopener">書き込みフィルターの除外</a>  <blockquote><p>UWF 機能の除外設定について  </p></blockquote></li><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/service-uwf-protected-devices" target="_blank" rel="noopener">UWF で保護されているデバイスのサービス</a>  <blockquote><p>UWF を有効化している環境で Windows 更新プロブラムやマルウェア対策ソフトのシグネチャを更新する方法について  </p></blockquote></li><li><a href="https://docs.microsoft.com/ja-jp/windows-hardware/customize/enterprise/uwftroubleshooting" target="_blank" rel="noopener">Unified Write Filter (UWF) のトラブルシューティング</a>  <blockquote><p>トラブルシューティングに関する情報<br>UWF に関する情報採取手順は、<a href="https://jpiotblog.github.io/files/CollectInfo_UWF.md">こちら</a> を参照ください。</p></blockquote></details></li></ul><hr><h4 id="Windows-Update-時に-CPU-が高くならないようにしたい"><a href="#Windows-Update-時に-CPU-が高くならないようにしたい" class="headerlink" title="Windows Update 時に CPU が高くならないようにしたい"></a>Windows Update 時に CPU が高くならないようにしたい</h4><details><summary style="font-size: 10pt">回答</summary><p>WmiPrvSE.exe プロセスが uwfwmi.dll にて UWF のオーバーレイ ファイルを取得する処理に CPU を消費する傾向があります。こちらは仕様に基づく動作となります。</p></details><hr><h4 id="“UWF-Servicing-Mode”-実行時に-WSUS-の設定が参照されないのは不具合か"><a href="#“UWF-Servicing-Mode”-実行時に-WSUS-の設定が参照されないのは不具合か" class="headerlink" title="“UWF Servicing Mode” 実行時に WSUS の設定が参照されないのは不具合か"></a>“UWF Servicing Mode” 実行時に WSUS の設定が参照されないのは不具合か</h4><details><summary style="font-size: 10pt">回答</summary><p>UWF の不具合として、2019 年 9 月 (Windows 10 1903 のみ 2019 年 10 月) の更新プログラムで修正しております。  </p></details><hr><h4 id="フィルター有効化時にページファイル-Pagefile-sys-が削除されないようにしたい"><a href="#フィルター有効化時にページファイル-Pagefile-sys-が削除されないようにしたい" class="headerlink" title="フィルター有効化時にページファイル (Pagefile.sys) が削除されないようにしたい"></a>フィルター有効化時にページファイル (Pagefile.sys) が削除されないようにしたい</h4><details><summary style="font-size: 10pt">回答</summary><p>初回の <code>uwfmgr.exe filter enable</code> コマンドの実行時に Pagefile に関するレジストリ値を操作する処理が実施される為です。回避策としては、<code>uwfmgr.exe filter enable</code> コマンドを実行した後、再起動の直前にもう一度 Pagefile.sys の設定を保護対象外のボリュームに対して実施する必要があります。  </p></details><hr><h4 id="UWF-を有効化して利用開始する際のベストプラクティスについて"><a href="#UWF-を有効化して利用開始する際のベストプラクティスについて" class="headerlink" title="UWF を有効化して利用開始する際のベストプラクティスについて"></a>UWF を有効化して利用開始する際のベストプラクティスについて</h4><details><summary style="font-size: 10pt">回答</summary><p>以下の実施についてご留意ください。  </p><ul><li><p>UWF には複数の既知の不具合が存在します。Windows Update を最新まで適用してご利用を開始ください。</p></li><li><p>除外設定によりシステム上同期を取る必要がある情報に矛盾が生じ、何らかの問題を発生させる可能性がございます。以下サイトの情報を参考に、除外設定をの実施をご検討ください。<br> <a href="https://jpiotblog.github.io/blog/2020/02/19/UWF-exclusions/">UWF の除外設定について</a></p></li><li><p>OS 再起動を定期的に行わないシステムの場合、UWF のオーバーレイ領域の不足によって問題が発生する可能性があります。以下サイトの情報を参考に、オーバーレイの設定をご検討ください。<br> <a href="https://jpiotblog.github.io/blog/2020/02/20/UWF-longtermup/">長期間稼働するシステムでの UWF 有効化について</a></p></li></ul></details><hr><br>※ 適宜追加更新します。]]></content>
      
      
      <categories>
          
          <category> Unified Write Filter (UWF) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FAQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>過去ブログについて</title>
      <link href="/blog/2020/01/12/past-blog/"/>
      <url>/blog/2020/01/12/past-blog/</url>
      
        <content type="html"><![CDATA[<p>過去のブログ情報を紹介いたします。<br>定期的な更新は行われていないため、除外設定等の情報は現在の OS では適用されない場合がございます。<br>恐れ入りますが、予めご留意いただけますようお願い申し上げます。</p><a id="more"></a><br><hr><h2 id="UWF"><a href="#UWF" class="headerlink" title="UWF"></a>UWF</h2><ul><li><a href="https://docs.microsoft.com/ja-jp/archive/blogs/askcorejp/unified-write-filter-info" target="_blank" rel="noopener">統合書き込みフィルター (Unified Write Filter (UWF)) について</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/4f4f5c1c-1c83-49c2-940a-b7dc51cd1379/windows-10-12391-uwf-unified-write-filter-1239212464125231254012503?forum=Wcsupportja" target="_blank" rel="noopener">Windows 10 で UWF (Unified Write Filter) とグループ ポリシーによるデバイスのインストール制限を併用する場合の動作について</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/7cfc6009-1a55-4ee3-b892-345fe2ee2377/unified-write-filter-uwf?forum=Wcsupportja" target="_blank" rel="noopener">Unified Write Filter (UWF) 環境での運用を考慮した設定について</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/68832722-c695-4779-a1c4-7b537db89a05/uwf-289612117721270124671251012531124891236422833259431237712427?forum=Wcsupportja" target="_blank" rel="noopener">UWF 無効化コマンドが失敗する</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/4276f895-6266-4d4a-92dd-507ed694aab3/uwf-26377211771239512375123901236312425-6?forum=Wcsupportja" target="_blank" rel="noopener">UWF 有効にしてから 6 ヶ月経過すると一部の通知アイコンが表示されない現象について</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/0cae72ac-dcf8-4d46-a944-f39bdb92c1c0/3211321512263601236536796124151250112451125231247912540-unified?forum=Wcsupportja" target="_blank" rel="noopener">統合書き込みフィルター (Unified Write Filter (UWF)) について</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/01e63d85-cacc-4286-a4b7-d397ccfa143f/uwfmgrexe?forum=Wcsupportja" target="_blank" rel="noopener">UWFMGR.EXE コマンド実行時の文字数制限について</a></li><li><a href="https://social.technet.microsoft.com/Forums/ja-JP/959a7f26-3b2a-4336-9882-696bc21efbe1/windows-10?forum=Wcsupportja" target="_blank" rel="noopener">Windows 10 の統合書き込みフィルター機能 (UWF) で、フィルターの除外設定を行ってもオーバーレイのメモリを消費してしまう</a></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> IoT 製品全般 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 過去ブログ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jpiotblog について</title>
      <link href="/blog/2020/01/01/about-jpiotblog/"/>
      <url>/blog/2020/01/01/about-jpiotblog/</url>
      
        <content type="html"><![CDATA[<p>日本マイクロソフトの IoT 製品 (Device Lockdown 機能含む) に関するサポート情報のブログです。</p><h3 id="公開日"><a href="#公開日" class="headerlink" title="公開日"></a>公開日</h3><p>2020 年 1 月 1 日より公開いたしました。</p><h3 id="活動について"><a href="#活動について" class="headerlink" title="活動について"></a>活動について</h3><p>製品のサポート メンバーによって運用されております。仕様に関する情報やトラブル シューティングの手順、実装におけるワンポイント アドバイスを公開いたします。</p><h3 id="留意事項"><a href="#留意事項" class="headerlink" title="留意事項"></a>留意事項</h3><p>サイトのコンテンツや情報において、可能な限り正確な情報を掲載し、更新するよう努めております。しかしながら、状況の変化や情報が古くなることにより、必ずしもお客様環境に適用できない情報となる場合がございます。恐れ入りますが、予めご留意くださいますようお願い申し上げます。</p>]]></content>
      
      
      <categories>
          
          <category> IoT 製品全般 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> はじめに </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
