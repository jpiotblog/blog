{"meta":{"title":"Japan IoT Support Blog","subtitle":"","description":"","author":"jpiotblog","url":"https://jpiotblog.github.io","root":"/blog/"},"pages":[],"posts":[{"title":"UWF を有効化した環境でメモリ ダンプを取得する方法","slug":"dump-setting","date":"2020-02-11T15:00:00.000Z","updated":"2020-02-12T01:36:44.031Z","comments":true,"path":"2020/02/12/dump-setting/","link":"","permalink":"https://jpiotblog.github.io/2020/02/12/dump-setting/","excerpt":"UWF を有効化した環境で、メモリ ダンプを取得する方法についてご紹介します。","text":"UWF を有効化した環境で、メモリ ダンプを取得する方法についてご紹介します。 はじめに 概要 強制メモリ ダンプを取得することで、現象発生時のメモリの状態を Memory.dmp ファイルとして保存し、そこから現象発生時のオペレーティング システムのメモリの状態や、行われていた処理などの詳細を確認することができます。 影響 メモリ ダンプ取得のためのシャットダウン操作は、正常にシステムを停止させる方法ではないことを予めご留意ください。システムが正常に動作しない問題の調査方法として、他に方法が無い場合にご案内させていただいております。運用環境で、且つ回避策がある場合には、極力実施をお勧めいたしません。 再起動の必要性 事前準備時、メモリダンプ採取時に再起動が必要です。 採取ファイル 本手順では “D:\\Dumps\\Memory.dmp” として進めさせていただきます。 事前準備 システム ドライブ以外に、メモリ ダンプを保存するボリュームを追加し、いずれかのドライブとしてマウントします。※ この手順では D: ドライブとします。 事前に UWF フィルターとボリュームの保護を実行します。この過程で PageFile の設定が一旦初期化されます。実行例:uwfmgr.exe filter enableuwfmgr.exe volume protect c:shutdown -r -t 0※ この手順ではシステム ドライブを C: ドライブとします。 Dump 出力設定手順 (1) UWF フィルターを無効化する。 実行例: uwfmgr.exe filter disable (2) PageFile の大きさを 物理メモリ + 300 Mbyte 以上の大きさに設定する。 実行例: a) [エクスプローラ] - [コンピュータ] を右クリックし [プロパティ(R)] をクリックします。 b) [システムの詳細設定] をクリックします。 c) [詳細設定] タブの [パフォーマンス] にある [設定(S)] をクリックします。 d) [詳細設定] タブの [仮想メモリ] の項目にある [変更(C)] ボタンをクリックします。 e) この画面にて、[すべてのドライブのページング ファイルのサイズを自動的に管理する(A)] オプションを外します。 f) 手順 1) で作成したシステムドライブ以外のドライブ (ここでは D:) をクリックします。 g) [カスタムサイズ] にチェックを付け、[初期サイズ]、[最大サイズ] の両方に物理メモリ + 300 Mbyte 以上の値を入力します。 (例えば 4096MB メモリの場合、4396MB) h) その後 [設定] ボタンをクリックし設定を反映させ [OK] ボタンをクリックします。 i) “変更結果はコンピューターを再起動しなければ有効になりません。” というポップアップが表示されますので、[OK] ボタンをクリックします。 j) “パフォーマンス オプション” のウィンドウも [OK] ボタンにて閉じます。 ※ 補足 この設定値は、次のレジストリに反映されます。なお、直接レジストリ値を編集することでも、ページング ファイル サイズを設定することができます。 キー: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\SessionManager\\MemoryManagement 名前: PagingFiles 種類: REG_MULTI_SZ データ: &lt;ページ ファイル保存先&gt; &lt;初期サイズ (MB)&gt; &lt;最大サイズ (MB)&gt; (設定例: d:\\pagefile.sys 4396 4396) (3) 完全メモリ ダンプ (Full Dump) が生成されるよう設定する。 a) [エクスプローラ] - [コンピュータ] を右クリックし、[プロパティ] をクリックします。 b) 左ペインにある [システムの詳細設定] をクリックします。 c) “システムのプロパティ” の [詳細設定] タブの [起動と回復] 枠内にある [設定] ボタンをクリックします。 d) “起動と回復” の [デバッグ情報の書き込み] 枠内にあるプルダウン メニューから [完全メモリ ダンプ] を選択し、[OK] ボタンを 2 回クリックします。 (4) [ダンプ ファイル] のパスを変更する。 ※ 注意 GUI から [完全メモリ ダンプ] を選択する事と併せて、以下のレジストリ エディタで、次のレジストリの値が設定されている事をご確認ください。 キー: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\CrashControl 名前: CrashDumpEnabled 種類: REG_DWORD データ: 1 メモリ ダンプの出力先は、次のレジストリ値で確認できます。 キー: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\CrashControl 名前: DumpFile 種類: REG_EXPAND_SZ データ(既定値): D:\\Dumps\\MEMORY.DMP (5) DedicatedDumpFile.sys を設定する。 レジストリ エディタで、次のレジストリの値を設定してください。 キー: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CrashControl 名前: DedicatedDumpFile 種類: 文字列値 データ: D:\\dedicateddumpfile.sys キー: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CrashControl 名前: DumpFileSize 種類: REG_DWORD データ: &lt;10 進数でメモリサイズ + 300 MB を設定ください&gt; (設定例: 4396) (6: オプション) AlwaysKeepMemoryDump を設定する。 Client OS におけるメモリ ダンプでは WorkGroup 環境の場合、ダンプ ファイル格納ボリュームの空き容量が25 GB 未満の場合、ダンプ ファイルが削除される動作となります (Domain 環境の場合、25 GB の制限には合致いたしません)。 そのため、対象の端末が Workgroup 環境の場合には、以下のレジストリ値を設定いただき、ダンプ ファイルが上記制限に合致しないよう設定いただく事をご検討いただければと存じます。 キー: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CrashControl 名前: AlwaysKeepMemoryDump 種類: REG_DWOD データ : 1 公開情報: Kernel dump storage and clean up behavior in Windows 7 (7: オプション) キーボードから STOP エラーを発生できるように設定する。 事象発生時にメモリ ダンプの生成を行えるよう、トリガーの設定を行います。レジストリ エディタで、次のレジストリの値を設定してください。 &lt;PS/2 キーボードの場合&gt; キー: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\i8042prt\\Parameters 名前: CrashOnCtrlScroll 種類: REG_DWORD データ: 1 &lt;USB キーボードの場合&gt; キー: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\kbdhid\\Parameters 名前: CrashOnCtrlScroll 種類: REG_DWORD データ: 1 (8: オプション) NMI スイッチを使用できるように設定する。 Windows の機能ではなく、ご使用のハードウェアにメモリ ダンプ取得のための NMI (Non-Maskable Interrupt) スイッチが備わっている場合、以下にご案内するキーボードでクラッシュさせる方法よりも割り込みレベルが高いため、ご使用いただくことをお勧めします。 ご使用のハードウェアに当該機能が備わっているか、また、使用方法につきましては、ハードウェアの取扱説明書、あるいはハードウェアご提供元様にご確認ください。 また、Windows 側の設定として、レジストリ エディタで、次のレジストリの値を設定ください。 キー: HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CrashControl 名前: NMICrashDump 種類: REG_DWORD データ: 1 (9) UWF を有効化し、OS を再起動する。 実行例: uwfmgr.exe filter enable shutdown -r -t 0 Dump の出力手順調査対象の事象が発生した際に、NMI もしくはキーボード操作によってメモリ ダンプを出力させます。 取得対象: “D:\\Dumps\\Memory.dmp” ※ 参考情報 Windows Server 2008 および Windows Server 2008 R2 でカーネルまたは完全メモリ ダンプ ファイルを生成する方法 Overview of memory dump file options for Windows 2000, Windows XP, Windows Server 2003, Windows Vista, Windows Server 2008, Windows 7 and Windows Server 2008 R2 メモリ ダンプ ファイルのオプションは、Windows 2000、Windows XP、Windows Server 2003、Windows Vista、Windows Server 2008、Windows 7 と Windows サーバー 2008 R2 の概要 (機械翻訳) Windows 8 and Windows Server 2012: Automatic Memory Dump (英文のみ) NMI_HARDWARE_FAILURE error when an NMI is triggered on Windows 8 and Windows Server 2012 (英文のみ) Windows の機能により、キーボード操作で Memory.dmp ファイルを作成できる クラッシュ後 Windows でメモリ ダンプ ファイルが保存されない","categories":[{"name":"Unified Write Filter","slug":"Unified-Write-Filter","permalink":"https://jpiotblog.github.io/categories/Unified-Write-Filter/"}],"tags":[{"name":"メモリ ダンプの設定手順","slug":"メモリ-ダンプの設定手順","permalink":"https://jpiotblog.github.io/tags/%E3%83%A1%E3%83%A2%E3%83%AA-%E3%83%80%E3%83%B3%E3%83%97%E3%81%AE%E8%A8%AD%E5%AE%9A%E6%89%8B%E9%A0%86/"}]},{"title":"UWF 関連トラブル時の情報採取手順について","slug":"CollectInfo_UWF","date":"2020-01-25T15:00:00.000Z","updated":"2020-02-09T14:51:38.512Z","comments":true,"path":"2020/01/26/CollectInfo_UWF/","link":"","permalink":"https://jpiotblog.github.io/2020/01/26/CollectInfo_UWF/","excerpt":"トラブル発生時の情報採取手順を記載します。","text":"トラブル発生時の情報採取手順を記載します。 対象事象発生マシン (OS: Windows 10 IoT Core または Windows 10 IoT Enterprise) 事前準備こちら から CollectInfo_UWF.txt ファイルをダウンロードし、拡張子を .txt から .bat に変更、実施対象の任意の場所に格納します。 &lt;実施対象に以下が存在する状態&gt;・ [任意の場所]\\CollectInfo_UWF.bat ファイル 影響ログを採取することで負荷が上がる可能性は考えられますが、基本的に OS リソースや処理への影響はありません。 実行手順(1) 事象発生マシンに管理者アカウントでログオンします。(2) CollectInfo_UWF.bat ファイルを右クリックし、[管理者として実行] を選択します。(3) “実行したい番号を入力ください” メッセージに 1 を入力、リターン キーを押下し、表示に従いメニューに戻ります。(4) “実行したい番号を入力ください” メッセージに q を入力、リターン キーを押下してツールを終了します。(5) デスクトップ上 &lt;YYYYMMDD 形式の年月日&gt;_&lt;ホスト名&gt;_info フォルダーを圧縮し、お問い合わせいただく際にご提供ください。","categories":[{"name":"Unified Write Filter","slug":"Unified-Write-Filter","permalink":"https://jpiotblog.github.io/categories/Unified-Write-Filter/"}],"tags":[{"name":"情報採取手順","slug":"情報採取手順","permalink":"https://jpiotblog.github.io/tags/%E6%83%85%E5%A0%B1%E6%8E%A1%E5%8F%96%E6%89%8B%E9%A0%86/"}]},{"title":"FAQ (Unified Write Filter)","slug":"FAQ-uwf","date":"2020-01-15T15:00:00.000Z","updated":"2020-02-09T14:51:38.513Z","comments":true,"path":"2020/01/16/FAQ-uwf/","link":"","permalink":"https://jpiotblog.github.io/2020/01/16/FAQ-uwf/","excerpt":"よくあるご質問とその回答をお纏めいたします。","text":"よくあるご質問とその回答をお纏めいたします。 参考となる公開情報について 統合書き込みフィルター (UWF) 機能 機能の概要、要件、制限事項、各機能の紹介など Unified Write Filter (UWF) 機能を使用します。 UWF の有効化方法 統合書き込みフィルター (UWF) オーバーレイの位置とサイズ オーバーレイに関する情報 書き込みフィルターの除外 UWF 機能の除外設定について UWF で保護されているデバイスのサービス UWF を有効化している環境で Windows 更新プロブラムやマルウェア対策ソフトのシグネチャを更新する方法について Unified Write Filter (UWF) のトラブルシューティング トラブルシューティングに関する情報UWF に関する情報採取手順は、こちら を参照ください。 UWF 適用環境で Windows Update 時に CPU が高くなるWmiPrvSE.exe プロセスが uwfwmi.dll にて UWF のオーバーレイ ファイルを取得する処理にて CPU を消費する傾向があります。こちらは仕様に基づく動作となります。 “UWF Servicing Mode” で WSUS の設定が参照されないUWF の不具合として、2019 年 9 月 (Windows 10 1903 のみ 2019 年 10 月) の更新プログラムで修正しております。 Windows Defender のレジストリを除外すると OS 起動時にハングアップするレジストリ キー HKLM\\System\\CurrentControlSet\\Services\\WdFilter や HKLM\\SYSTEM\\ControlSet001\\Control\\DeviceClasses\\{53f5630d-b6bf-11d0-94f2-00a0c91efb8b} を除外設定にしていると、OS 起動時にハングアップして起動できない場合があります。レースコンディションによるものであり、スペックの低い端末で発生する傾向にあります。OS 側での修正は困難であるため、Wdfilter の除外解除等をご検討ください。 “uwfmgr.exe filter enable” コマンドを実行すると保護対象ボリュームに配置された Pagefile.sys が削除される初回の uwfmgr.exe filter enable コマンドの実行時に Pagefile に関するレジストリ値を操作する処理が実施される為です。回避策としては、uwfmgr.exe filter enable コマンドを実行した後、再起動の直前にもう一度 Pagefile.sys の設定を保護対象ボリュームに対して実施する必要があります。 ※ 現在更新中です。","categories":[{"name":"Unified Write Filter","slug":"Unified-Write-Filter","permalink":"https://jpiotblog.github.io/categories/Unified-Write-Filter/"}],"tags":[{"name":"FAQ","slug":"FAQ","permalink":"https://jpiotblog.github.io/tags/FAQ/"}]},{"title":"過去ブログについて","slug":"past-blog","date":"2020-01-11T15:00:00.000Z","updated":"2020-02-09T14:55:14.498Z","comments":true,"path":"2020/01/12/past-blog/","link":"","permalink":"https://jpiotblog.github.io/2020/01/12/past-blog/","excerpt":"過去のブログ情報を紹介いたします。定期的な更新は行われていないため、除外設定等の情報は現在の OS では適用されない場合がございます。恐れ入りますが、予めご留意いただけますようお願い申し上げます。","text":"過去のブログ情報を紹介いたします。定期的な更新は行われていないため、除外設定等の情報は現在の OS では適用されない場合がございます。恐れ入りますが、予めご留意いただけますようお願い申し上げます。 UWF 統合書き込みフィルター (Unified Write Filter (UWF)) について Windows 10 で UWF (Unified Write Filter) とグループ ポリシーによるデバイスのインストール制限を併用する場合の動作について Unified Write Filter (UWF) 環境での運用を考慮した設定について UWF 無効化コマンドが失敗する UWF 有効にしてから 6 ヶ月経過すると一部の通知アイコンが表示されない現象について 統合書き込みフィルター (Unified Write Filter (UWF)) について UWFMGR.EXE コマンド実行時の文字数制限について Windows 10 の統合書き込みフィルター機能 (UWF) で、フィルターの除外設定を行ってもオーバーレイのメモリを消費してしまう","categories":[{"name":"IoT 製品全般","slug":"IoT-製品全般","permalink":"https://jpiotblog.github.io/categories/IoT-%E8%A3%BD%E5%93%81%E5%85%A8%E8%88%AC/"}],"tags":[{"name":"過去ブログ","slug":"過去ブログ","permalink":"https://jpiotblog.github.io/tags/%E9%81%8E%E5%8E%BB%E3%83%96%E3%83%AD%E3%82%B0/"}]},{"title":"jpiotblog について","slug":"about-jpiotblog","date":"2019-12-31T15:00:00.000Z","updated":"2020-01-09T16:09:57.065Z","comments":true,"path":"2020/01/01/about-jpiotblog/","link":"","permalink":"https://jpiotblog.github.io/2020/01/01/about-jpiotblog/","excerpt":"","text":"日本マイクロソフトの IoT 製品 (Device Lockdown 機能含む) に関するサポート情報のブログです。 公開日2020 年 1 月 1 日より公開いたしました。 活動について製品のサポート メンバーによって運用されております。仕様に関する情報やトラブル シューティングの手順、実装におけるワンポイント アドバイスを公開いたします。 留意事項サイトのコンテンツや情報において、可能な限り正確な情報を掲載し、更新するよう努めております。しかしながら、状況の変化や情報が古くなることにより、必ずしもお客様環境に適用できない情報となる場合がございます。恐れ入りますが、予めご留意くださいますようお願い申し上げます。","categories":[{"name":"IoT 製品全般","slug":"IoT-製品全般","permalink":"https://jpiotblog.github.io/categories/IoT-%E8%A3%BD%E5%93%81%E5%85%A8%E8%88%AC/"}],"tags":[{"name":"はじめに","slug":"はじめに","permalink":"https://jpiotblog.github.io/tags/%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB/"}]}]}